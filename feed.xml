<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="https://debezium.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://debezium.io/" rel="alternate" type="text/html"/><updated>2022-07-29T12:55:48+00:00</updated><id>https://debezium.io/feed.xml</id><title type="html">Debezium</title><subtitle>Debezium is an open source distributed platform for change data capture. Start it up, point it at your databases, and your apps can start responding to all of the inserts, updates, and deletes that other apps commit to your databases. Debezium is durable and fast, so your apps can respond quickly and never miss an event, even when things go wrong.</subtitle><entry><title type="html">Debezium 2.0.0.Beta1 Released</title><link href="https://debezium.io/blog/2022/07/27/debezium-2.0-beta1-released/" rel="alternate" type="text/html" title="Debezium 2.0.0.Beta1 Released"/><published>2022-07-27T00:00:00+00:00</published><updated>2022-07-27T00:00:00+00:00</updated><id>https://debezium.io/blog/2022/07/27/debezium-2.0-beta1-released</id><content type="html" xml:base="https://debezium.io/blog/2022/07/27/debezium-2.0-beta1-released/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;I am thrilled to share that Debezium &lt;strong&gt;2.0.0.Beta1&lt;/strong&gt; has been released!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release contains several new features including a pluggable topic selector, the inclusion of database user who committed changes for Oracle change events, and improved handling of table unique indices as primary keys. In addition, there are several breaking changes such as the move to multi-partition mode as default and the introduction of the &lt;code&gt;debezium-storage&lt;/code&gt; module and its implementations. So lets take a look at all these in closer detail.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;multi_partition_mode_now_default&quot;&gt;Multi-partition mode now default&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Many database platforms support multi-tenancy out of the box, meaning you can have one installation of the database engine and have many unique databases. In cases like SQL Server, this traditionally required a separate connector deployment for each unique database. Over the last year, a large effort has been made to break down that barrier and to introduce a common way that any single connector deployment could connect and stream changes from multiple databases.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The first notable change is with the SQL Server connector&amp;#8217;s configuration option, &lt;code&gt;database.dbname&lt;/code&gt;. This option has been replaced with a new option called &lt;code&gt;database.names&lt;/code&gt;. As multi-partition mode is now default, this new &lt;code&gt;database.names&lt;/code&gt; option can be specified using a comma-separated list of database names, as shown below:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;properties&quot;&gt;database.names=TEST1,TEST2&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In this example, the connector is being configured to capture changes from two unique databases on the same host installation. The connector will start two unique tasks in Kafka Connect and each task will be responsible for streaming changes from its respective database concurrently.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The second notable change is with connector metrics naming. A connector exposes JMX metrics via beans that are identified with a unique name. With multi-partition mode the default with multiple tasks, each task requires its own metrics bean and so a change in the naming strategy was necessary.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In older versions of Debezium using SQL Server as an example, metrics were available using the following naming strategy:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;properties&quot;&gt;debezium.sql_server:type=connector-metrics,server=&amp;lt;sqlserver.server.name&amp;gt;,context=&amp;lt;context&amp;gt;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In this release, the naming strategy now includes a new &lt;code&gt;task&lt;/code&gt; component in the JMX MBean name:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;properties&quot;&gt;debezium.sql_server:type=connector-metrics,server=&amp;lt;sqlserver.server.name&amp;gt;,task=&amp;lt;task.id&amp;gt;,context=&amp;lt;context&amp;gt;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Please review your metrics configurations as the naming changes could have an impact when collecting Debezium metrics.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;debezium_storage_module&quot;&gt;Debezium storage module&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In this release, we have introduced a new &lt;code&gt;debezium-storage&lt;/code&gt; set of artifacts for file- and kafka- based database history and offset storage. This change is the first of several future implementations set to support platforms such as Amazon S3, Redis, and possibly JDBC.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;For users who install connectors via plugin artifacts, this should be a seamless change as all dependencies are bundled in those plugin downloadable archives. For users who may embed Debezium in their applications or who may be building their own connector, be aware you may need to add a new storage dependency depending on which storage implementations used.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;pluggable_topic_selector&quot;&gt;Pluggable topic selector&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium&amp;#8217;s default topic naming strategy emits change events to topics named &lt;code&gt;database.schema.table&lt;/code&gt;. If you require that topics be named differently, an SMT would normally be added to the connector configuration to adjust this behavior. But, this presents a challenge in situations where one of the components of this topic name, perhaps the database or table name, contains a dot (&lt;code&gt;.&lt;/code&gt;) and perhaps an SMT doesn&amp;#8217;t have adequate context.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In this release, a new &lt;code&gt;TopicNamingStrategy&lt;/code&gt; was introduced to allow fully customizing this behavior directly inside Debezium. The default naming strategy implementation should suffice in most cases, but if you find that it doesn&amp;#8217;t you can provide a custom implementation of the &lt;code&gt;TopicNamingStrategy&lt;/code&gt; contract to fully control various namings used by the connector. To provide your own custom strategy, you would specify the &lt;code&gt;topic.naming.strategy&lt;/code&gt; connector option with the fully-qualified class name of the strategy, as shown below:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;properties&quot;&gt;topic.naming.strategy=org.myorganization.MyCustomTopicNamingStrategy&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This custom strategy is not just limited to controlling the names of topics for table mappings, but also for schema changes, transaction metadata, and heartbeats. You can refer to the &lt;code&gt;DefaultTopicNamingStrategy&lt;/code&gt; found &lt;a href=&quot;https://github.com/debezium/debezium/blob/main/debezium-core/src/main/java/io/debezium/schema/DefaultTopicNamingStrategy.java&quot;&gt;here&lt;/a&gt; as an example. This feature is still incubating and we&amp;#8217;ll continue to improve and develop it as feedback is received.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;oracle_commit_user_in_change_events&quot;&gt;Oracle commit user in change events&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The source information block of change events carry a variety of context about where the change event originated. In this release, the Oracle connector now includes the user who made the database change in the captured change event. A new field, &lt;code&gt;user_name&lt;/code&gt;, can now be found in the source info block with this new information. This field is optional, and is only available when changes are emitted using the LogMiner-based implementation. This field may also contain the value of &lt;code&gt;UNKNOWN&lt;/code&gt; if the user associated with a change is dropped prior to the change being captured by the connector.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;improved_table_unique_index_handling&quot;&gt;Improved table unique index handling&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;A table does not have to have a primary key to be captured by a Debezium connector. In cases where a primary key is not defined, Debezium will inspect a table&amp;#8217;s unique indices to see whether a reasonable key substitution can be made. In some situations, the index may refer to columns such as &lt;code&gt;CTID&lt;/code&gt; for PostgreSQL or &lt;code&gt;ROWID&lt;/code&gt; in Oracle. These columns are not visible nor user-defined, but instead are hidden synthetic columns generated automatically by the database. In addition, the index may also use database functions to transform the column value that is stored, such as &lt;code&gt;UPPER&lt;/code&gt; or &lt;code&gt;LOWER&lt;/code&gt; for example.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In this release, indices that rely on hidden, auto-generated columns, or columns wrapped in database functions are no longer eligible as primary key alternatives. This guarantees that when relying on an index as a primary key rather than a defined primary key itself, the generated message&amp;#8217;s primary key value tuple directly maps to the same values used by the database to represent uniqueness.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;other_fixes_improvements&quot;&gt;Other fixes &amp;amp; improvements&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;There are several bugfixes and stability changes in this release, some noteworthy are:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;MongoConnector&amp;#8217;s field exclusion configuration does not work with fields with the same name but from different collections &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4846&quot;&gt;DBZ-4846&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Remove redundant setting of last events &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5047&quot;&gt;DBZ-5047&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Rename &lt;code&gt;docker-images&lt;/code&gt; repository and JIRA component to &lt;code&gt;container-images&lt;/code&gt; &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5048&quot;&gt;DBZ-5048&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Read Debezium Metrics From Debezium Server Consumer &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5235&quot;&gt;DBZ-5235&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;User input are not consistent on Filter step for the DBZ connectors &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5246&quot;&gt;DBZ-5246&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;KafkaDatabaseHistory without check database history topic create result caused UnknowTopicOrPartitionException &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5249&quot;&gt;DBZ-5249&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Treat SQLServerException with &quot;Broken pipe (Write failed)&quot; exception message as a retriable exception &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5292&quot;&gt;DBZ-5292&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Lob type data is inconsistent between source and sink, after modifying the primary key &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5295&quot;&gt;DBZ-5295&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Caused by: java.io.EOFException: Failed to read next byte from position 2005308603 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5333&quot;&gt;DBZ-5333&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Incremental Snapshot: Oracle table name parsing does not support periods in DB name &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5336&quot;&gt;DBZ-5336&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Support PostgreSQL default value function calls with schema prefixes &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5340&quot;&gt;DBZ-5340&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Unsigned tinyint conversion fails for MySQL 8.x &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5343&quot;&gt;DBZ-5343&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Log a warning when an unsupported LogMiner operation is detected for a captured table &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5351&quot;&gt;DBZ-5351&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;NullPointerException thrown when unique index based on both system and non-system generated columns &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5356&quot;&gt;DBZ-5356&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MySQL Connector column hash v2 does not work &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5366&quot;&gt;DBZ-5366&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Outbox JSON expansion fails when nested arrays contain no elements &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5367&quot;&gt;DBZ-5367&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;docker-maven-plugin needs to be upgraded for Mac Apple M1 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5369&quot;&gt;DBZ-5369&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;AWS DocumentDB (with MongoDB Compatibility) Connect Fail &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5371&quot;&gt;DBZ-5371&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle Xstream does not propagate commit timestamp to transaction metadata &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5373&quot;&gt;DBZ-5373&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;UI View connector config in non-first cluster return 404 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5378&quot;&gt;DBZ-5378&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;CommitScn not logged in expected format &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5381&quot;&gt;DBZ-5381&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;org.postgresql.util.PSQLException: Bad value for type timestamp/date/time: CURRENT_TIMESTAMP &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5384&quot;&gt;DBZ-5384&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Missing &quot;previousId&quot; property with parsing the rename statement in kafka history topic &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5386&quot;&gt;DBZ-5386&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Check constraint introduces a column based on constraint in the schema change event. &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5390&quot;&gt;DBZ-5390&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Support storing extended attributes in relational model and JSON schema history topic &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5396&quot;&gt;DBZ-5396&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The column is referenced as PRIMARY KEY, but a matching column is not defined in table &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5398&quot;&gt;DBZ-5398&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Clarify which database name to use for signal.data.collection when using Oracle with pluggable database support &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5399&quot;&gt;DBZ-5399&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Timestamp with time zone column&amp;#8217;s default values not in GMT &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5403&quot;&gt;DBZ-5403&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade to Kafka 3.1 broke build compatibility with Kafka 2.x and Kafka 3.0 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5404&quot;&gt;DBZ-5404&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Remove the duplicated SimpleDdlParserListener from mysql connector &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5425&quot;&gt;DBZ-5425&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Altogether, a total of &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%202.0.0.Beta1%20ORDER%20BY%20component%20ASC&quot;&gt;59 issues&lt;/a&gt; were fixed for this release.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;A big thank you to all the contributors from the community who worked on this release: &lt;a href=&quot;https://github.com/ajunwalker&quot;&gt;Andrew Walker&lt;/a&gt;, &lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Bob Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/giljae&quot;&gt;Giljae Joo&lt;/a&gt;, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/HenryCaiHaiying&quot;&gt;Henry Cai&lt;/a&gt;, &lt;a href=&quot;https://github.com/blcksrx&quot;&gt;Hossein Torabi&lt;/a&gt;, &lt;a href=&quot;https://github.com/ismailsimsek&quot;&gt;Ismail Simsek&lt;/a&gt;, &lt;a href=&quot;https://github.com/domsj&quot;&gt;Jan Doms&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/MartinMedek&quot;&gt;Martin Medek&lt;/a&gt;, &lt;a href=&quot;https://github.com/nathan-smit-1&quot;&gt;Nathan Smit&lt;/a&gt;, &lt;a href=&quot;https://github.com/pmalon&quot;&gt;Paweł Malon&lt;/a&gt;, &lt;a href=&quot;https://github.com/smallYellowCat&quot;&gt;Pengwei Dou&lt;/a&gt;, &lt;a href=&quot;https://github.com/morozov&quot;&gt;Sergei Morozov&lt;/a&gt;, &lt;a href=&quot;https://github.com/vjuranek&quot;&gt;Vojtech Juranek&lt;/a&gt;, and &lt;a href=&quot;https://github.com/GOODBOY008&quot;&gt;Zhongqiang Gong&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;whats_next&quot;&gt;What&amp;#8217;s Next?&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In these last few months, the team has made some incredible progress on Debezium 2.0, and we can begin to see the finish line in the distance. A large of this is in part to the grew work the community has done to contribute changes, provide feedback, and to test and help make new features stable. But we&amp;#8217;re not done, so you can continue to expect another 2.0.0.Beta2 release in approximately 3 weeks, sticking with our usual cadence.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In addition, we do continue to backport changes to the 1.9 branch and will likely look at a 1.9.6.Final release sometime in August to round out that release stream just before we wrap up Debezium 2.0.0.Final.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;So stay cool and safe and happy capturing!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</content><author><name>Chris Cranford</name></author><category term="releases"/><category term="mysql"/><category term="postgres"/><category term="sqlserver"/><category term="cassandra"/><category term="oracle"/><category term="db2"/><category term="vitess"/><category term="outbox"/><summary type="html">I am thrilled to share that Debezium 2.0.0.Beta1 has been released! This release contains several new features including a pluggable topic selector, the inclusion of database user who committed changes for Oracle change events, and improved handling of table unique indices as primary keys. In addition, there are several breaking changes such as the move to multi-partition mode as default and the introduction of the debezium-storage module and its implementations. So lets take a look at all these in closer detail.</summary></entry><entry><title type="html">Debezium 1.9.5.Final Released</title><link href="https://debezium.io/blog/2022/07/11/debezium-1-9-5-final-released/" rel="alternate" type="text/html" title="Debezium 1.9.5.Final Released"/><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><id>https://debezium.io/blog/2022/07/11/debezium-1-9-5-final-released</id><content type="html" xml:base="https://debezium.io/blog/2022/07/11/debezium-1-9-5-final-released/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With the summer in full swing, the team is pleased to announce the release of Debezium &lt;strong&gt;1.9.5.Final&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release primarily focuses on bugfixes and stability; and is the recommended update for all users from earlier versions. This release contains &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project+%3D+DBZ+AND+fixVersion+%3D+1.9.5.Final&quot;&gt;24 resolved issues&lt;/a&gt; overall.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;changes&quot;&gt;Changes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release focused entirely on stability and bugfixes. A few noteworthy changes include:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Data duplication problem using postgresql source on debezium server &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5070&quot;&gt;DBZ-5070&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Duplicate SCNs on Oracle RAC installations incorrectly processed &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5245&quot;&gt;DBZ-5245&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;NPE when using Debezium Embedded in Quarkus &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5251&quot;&gt;DBZ-5251&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;No changes to commit_scn when oracle-connector got new lob data &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5266&quot;&gt;DBZ-5266&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;database.history.store.only.captured.tables.ddl not suppressing logs &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5270&quot;&gt;DBZ-5270&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Debezium server fail when connect to Azure Event Hubs &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5279&quot;&gt;DBZ-5279&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Enabling database.history.store.only.captured.tables.ddl does not restrict history topic records &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5285&quot;&gt;DBZ-5285&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Snapshot fails when table&amp;#8217;s relational model is created using an abstract data type as unique index &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5300&quot;&gt;DBZ-5300&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Incremental Snapshot: Oracle table name parsing does not support periods in DB name &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5336&quot;&gt;DBZ-5336&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Support PostgreSQL default value function calls with schema prefixes &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5340&quot;&gt;DBZ-5340&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Log a warning when an unsupported LogMiner operation is detected for a captured table &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5351&quot;&gt;DBZ-5351&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MySQL Connector column hash v2 does not work &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5366&quot;&gt;DBZ-5366&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Outbox JSON expansion fails when nested arrays contain no elements &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5367&quot;&gt;DBZ-5367&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;docker-maven-plugin needs to be upgraded for Mac Apple M1 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5369&quot;&gt;DBZ-5369&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Please refer to the &lt;a href=&quot;/releases/1.9/release-notes#release-1.9.5-final&quot;&gt;release notes&lt;/a&gt; to learn more about all fixed bugs, update procedures, etc.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Many thanks to the following individuals from the community which contributed to Debezium 1.9.5.Final: &lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Bob Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/ProofOfPizza&quot;&gt;Chai Stofkoper&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, Mikhail Dubrovin, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/HenryCaiHaiying&quot;&gt;Henry Cai&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/pmalon&quot;&gt;Paweł Malon&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Robert Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/vjuranek&quot;&gt;Vojtech Juranek&lt;/a&gt;, and &lt;a href=&quot;https://github.com/yangrong688&quot;&gt;yangrong688&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;outlook&quot;&gt;Outlook&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The Debezium 1.9 release stream will remain the current long-running version for the next three months. During this time, we will continue to evaluate user reports and do micro-releases to address bugs and regressions depending on severity.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The development on Debezium 2.0 is moving along quite nicely. We have entered the second half of the development cycle, and we&amp;#8217;ll begin beta releases with the next release toward the end of July.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Stay tuned for more in the coming weeks, stay cool out there, and happy capturing!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</content><author><name>Chris Cranford</name></author><category term="releases"/><category term="mongodb"/><category term="mysql"/><category term="postgres"/><category term="sqlserver"/><category term="cassandra"/><category term="oracle"/><category term="db2"/><category term="vitess"/><category term="outbox"/><summary type="html">With the summer in full swing, the team is pleased to announce the release of Debezium 1.9.5.Final! This release primarily focuses on bugfixes and stability; and is the recommended update for all users from earlier versions. This release contains 24 resolved issues overall.</summary></entry><entry><title type="html">Debezium 2.0.0.Alpha3 Released</title><link href="https://debezium.io/blog/2022/07/05/debezium-2.0-alpha3-released/" rel="alternate" type="text/html" title="Debezium 2.0.0.Alpha3 Released"/><published>2022-07-05T00:00:00+00:00</published><updated>2022-07-05T00:00:00+00:00</updated><id>https://debezium.io/blog/2022/07/05/debezium-2.0-alpha3-released</id><content type="html" xml:base="https://debezium.io/blog/2022/07/05/debezium-2.0-alpha3-released/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;I am thrilled to share that Debezium &lt;strong&gt;2.0.0.Alpha3&lt;/strong&gt; has been released!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;While this release contains a plethora of bugfixes, there are a few noteworthy improvements, which include providing a timestamp in transaction metadata events, the addition of several new fields in Oracle&amp;#8217;s change event source block, and a non-backward compatible change to the Oracle connector&amp;#8217;s offsets.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Lets take a look at these in closer detail.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;transaction_metadata_changes&quot;&gt;Transaction metadata changes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;A transaction metadata event describes the &lt;em&gt;beginning&lt;/em&gt; and the &lt;em&gt;end&lt;/em&gt; (commit) of a database transaction. These events are useful for a variety of reasons, including auditing. By default, transaction metadata events are not generated by a connector and to enable this feature, the &lt;code&gt;provide.transaction.metadata&lt;/code&gt; option must be enabled.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In this release, both &lt;code&gt;BEGIN&lt;/code&gt; and &lt;code&gt;END&lt;/code&gt; events include a new field, &lt;code&gt;ts_ms&lt;/code&gt;, which is the database timestamp of when the transaction either began or committed depending on the event type. An example of such an event now looks like:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;END&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;12345&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;event_count&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;integer&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;ts_ms&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;1657033173441&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;data_collections&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: [ { &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;data_collection&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;s1.a&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;event_count&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;integer&quot;&gt;1&lt;/span&gt; }, { &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;data_collection&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;s2.a&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;event_count&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;integer&quot;&gt;1&lt;/span&gt; } ] }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;If you are already using the transaction metadata feature, new events will contain this field after upgrading.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;If you are not using the transaction metadata feature but find this useful, simply add the &lt;code&gt;provide.transaction.metadata&lt;/code&gt; option set to &lt;em&gt;true&lt;/em&gt; to your connector configuration. By default, metadata events are emitted to a topic named after your &lt;code&gt;database.server.name&lt;/code&gt; option. This can be overridden by specifying the &lt;code&gt;transaction.topic&lt;/code&gt; option, as shown below:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;properties&quot;&gt;database.server.name=server1 provide.transaction.metadata=true transaction.topic=my-transaction-events&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In this example, all transaction metadata events will be emitted to &lt;code&gt;my-transaction-events&lt;/code&gt;. Please see your connector specific configuration for more details.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;oracle_source_info_changes&quot;&gt;Oracle source info changes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The &lt;code&gt;source&lt;/code&gt; information block is a section in the change event&amp;#8217;s payload that describes the database attributes of what generated the change event. For example, this section includes the system change number, the database timestamp of the change, and the transaction the change was part of.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In this release, we identified a regression where the &lt;code&gt;scn&lt;/code&gt; field did not correctly reflect the right &lt;code&gt;source&lt;/code&gt; of where the change event occurred. While it isn&amp;#8217;t abnormal for Oracle to generate multiple changes with the same system change number, we did find a regression that caused the wrong system change number to get assigned to each individual event within a scoped transaction, which made it difficult for some to use this information for auditing purposes. The &lt;code&gt;source.scn&lt;/code&gt; field should now correctly reflect the system change number from Oracle LogMiner or Oracle Xstream.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Additionally, several new fields were added to the &lt;code&gt;source&lt;/code&gt; information block to improve integration with the LogMiner implementation and Oracle RAC. An example of the new source information block:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: { &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;2.0.0.Alpha3&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;server1&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;ts_ms&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;integer&quot;&gt;1520085154000&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;txId&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;6.28.807&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;scn&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;2122184&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;commit_scn&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;2122185&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;rs_id&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;001234.00012345.0124&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;ssn&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;integer&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;redo_thread&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;integer&quot;&gt;1&lt;/span&gt; } }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The newly added fields are:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;dlist&quot;&gt; &lt;dl&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;rs_id&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Specifies the rollback segment identifier associated with the change.&lt;/p&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;ssn&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Specifies the SQL sequence number, this combined with the &lt;code&gt;rs_id&lt;/code&gt; represent a unique tuple for a change.&lt;/p&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;redo_thread&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Specifies the actual database redo thread that managed the change&amp;#8217;s lifecycle.&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Whether using Oracle Standalone or RAC, these values will always be provided when using Oracle LogMiner. These values have more importance on an Oracle RAC installation because you have multiple database servers manipulating the shared database concurrently. These fields specifically annotate which node and at what position on that node that the change originated.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;oracle_connector_offset_changes&quot;&gt;Oracle connector offset changes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In an Oracle Real Application Clusters (RAC) environment, multiple nodes access and manipulate the Oracle database concurrently. Each node maintains its own redo log buffers and executes its own redo writer thread. This means that at any given moment, each node has its own unique &quot;position&quot; and these will differ entirely on the activity that takes place on each respective node.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In this release, a small change was necessary in &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5245&quot;&gt;DBZ-5245&lt;/a&gt; to support Oracle RAC. Previously, the connector offsets maintained a field called &lt;code&gt;scn&lt;/code&gt; which represented this &quot;position&quot; of where the connector should stream changes from. But since each node could be at different positions in the redo, a single &lt;code&gt;scn&lt;/code&gt; value was inadequate for Oracle RAC.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The old Oracle connector offsets looked like this:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;scn&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;1234567890&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;commit_scn&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;2345678901&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;lcr_position&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;value&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;txId&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;value&quot;&gt;null&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Starting in 2.0.0.Alpha3, the new offset structure now has this form:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;scn&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;1234567890:00124.234567890.1234:0:1,1234567891:42100.0987656432.4321:0:2&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;commit_scn&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;2345678901&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;lcr_position&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;value&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;txId&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;value&quot;&gt;null&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;You will notice that the &lt;code&gt;scn&lt;/code&gt; field now consists of a comma-separated list of values, where each entry represents a tuple of values. This new tuple has the format of &lt;code&gt;scn:rollback-segment-id:ssn:redo-thread&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;While this change is forward compatible, meaning you can safely upgrade to 2.0.0.Alpha3 and the old format can be read, once the new format is written to the offsets, the older versions of the connector will be unable to read the offsets. If you upgrade and decide you need to roll back, be aware you&amp;#8217;ll need to manually adjust the connector offset&amp;#8217;s &lt;code&gt;scn&lt;/code&gt; field to simply contain a string of the most recent &lt;code&gt;scn&lt;/code&gt; value across all redo threads.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;other_fixes_improvements&quot;&gt;Other fixes &amp;amp; improvements&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;There are several bugfixes and stability changes in this release, some noteworthy are:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Incorrect loading of LSN from offsets &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-3942&quot;&gt;DBZ-3942&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Database history recovery will retain old tables after they&amp;#8217;ve been renamed &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4451&quot;&gt;DBZ-4451&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Adding new table with incremental snapshots not working &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4834&quot;&gt;DBZ-4834&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;BigDecimal has mismatching scale value for given Decimal schema &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4890&quot;&gt;DBZ-4890&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Debezium has never found starting LSN &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5031&quot;&gt;DBZ-5031&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Data duplication problem using postgresql source on debezium server &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5070&quot;&gt;DBZ-5070&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cursor fetch is used for all results during connection &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5084&quot;&gt;DBZ-5084&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Debezuim connector fails at parsing select statement overrides when table name has space &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5198&quot;&gt;DBZ-5198&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;DDL statement couldn&amp;#8217;t be parsed 2 - Oracle connector 1.9.3.Final &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5230&quot;&gt;DBZ-5230&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Debezium server duplicates scripting jar files &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5232&quot;&gt;DBZ-5232&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cannot convert field type tinyint(1) unsigned to boolean &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5236&quot;&gt;DBZ-5236&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle unparsable ddl create table &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5237&quot;&gt;DBZ-5237&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Postgres Incremental Snapshot on parent partitioned table not working &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5240&quot;&gt;DBZ-5240&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Character set influencers are not properly parsed on default values &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5241&quot;&gt;DBZ-5241&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;NPE when using Debezium Embedded in Quarkus &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5251&quot;&gt;DBZ-5251&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle LogMiner may fail with an in-progress transaction in an archive log that has been deleted &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5256&quot;&gt;DBZ-5256&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Order of source block table names in a rename schema change event is not deterministic &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5257&quot;&gt;DBZ-5257&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Debezium fails to connect to replicaset if a node is down &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5260&quot;&gt;DBZ-5260&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;No changes to commit_scn when oracle-connector got new lob data &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5266&quot;&gt;DBZ-5266&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Invalid date 'SEPTEMBER 31' &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5267&quot;&gt;DBZ-5267&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;database.history.store.only.captured.tables.ddl not suppressing logs &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5270&quot;&gt;DBZ-5270&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;io.debezium.text.ParsingException: DDL statement couldn&amp;#8217;t be parsed &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5271&quot;&gt;DBZ-5271&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Deadlock during snapshot with Mongo connector &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5272&quot;&gt;DBZ-5272&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Mysql parser is not able to handle variables in KILL command &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5273&quot;&gt;DBZ-5273&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Debezium server fail when connect to Azure Event Hubs &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5279&quot;&gt;DBZ-5279&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;ORA-01086 savepoint never established raised when database history topic cannot be created or does not exist &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5281&quot;&gt;DBZ-5281&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Enabling database.history.store.only.captured.tables.ddl does not restrict history topic records &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5285&quot;&gt;DBZ-5285&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Altogether, a total of &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%202.0.0.Alpha3%20ORDER%20BY%20component%20ASC&quot;&gt;66 issues&lt;/a&gt; were fixed for this release.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;A big thank you to all the contributors from the community who worked on this release: &lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Bob Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/ProofOfPizza&quot;&gt;Chai Stofkoper&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, Mikhail Dubrovin, &lt;a href=&quot;https://github.com/gunnarmorling&quot;&gt;Gunnar Morling&lt;/a&gt;, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcechace&quot;&gt;Jakub Cechacek&lt;/a&gt;, &lt;a href=&quot;https://github.com/novotnyJiri&quot;&gt;Jiri Novotny&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/yannickzj&quot;&gt;Jun Zhao&lt;/a&gt;, &lt;a href=&quot;https://github.com/kanha-gupta&quot;&gt;Kanha Gupta&lt;/a&gt;, &lt;a href=&quot;https://github.com/alwaysbemark&quot;&gt;Mark Bereznitsky&lt;/a&gt;, &lt;a href=&quot;https://github.com/mimaison&quot;&gt;Mickael Maison&lt;/a&gt;, &lt;a href=&quot;https://github.com/mikekamornikov&quot;&gt;Mike Kamornikov&lt;/a&gt;, &lt;a href=&quot;https://github.com/krnaveen14&quot;&gt;Naveen Kumar KR&lt;/a&gt;, Oskar Polak, &lt;a href=&quot;https://github.com/rahulkhanna2&quot;&gt;Rahul Khanna&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Robert Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/tim-patterson&quot;&gt;Tim Patterson&lt;/a&gt;, &lt;a href=&quot;https://github.com/vjuranek&quot;&gt;Vojtech Juranek&lt;/a&gt;, and &lt;a href=&quot;https://github.com/yangrong688&quot;&gt;yangrong688&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;whats_next&quot;&gt;What&amp;#8217;s Next?&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;You can expect a 1.9.5.Final release in the next week. This release will include many of the bugfixes that are part of this release, as we continue to improve the stability of 1.9 in micro-releases.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;You can also expect 2.0.0.Beta1 in the next 3 weeks, keeping with our usual release cadence. The next major milestones includes unifying snapshot modes across connectors, a new &lt;code&gt;Snapshotter&lt;/code&gt; API for all connectors, compactable JSON database history, offset unification, offset storage API and much more.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</content><author><name>Chris Cranford</name></author><category term="releases"/><category term="mysql"/><category term="postgres"/><category term="sqlserver"/><category term="cassandra"/><category term="oracle"/><category term="db2"/><category term="vitess"/><category term="outbox"/><summary type="html">I am thrilled to share that Debezium 2.0.0.Alpha3 has been released! While this release contains a plethora of bugfixes, there are a few noteworthy improvements, which include providing a timestamp in transaction metadata events, the addition of several new fields in Oracle&amp;#8217;s change event source block, and a non-backward compatible change to the Oracle connector&amp;#8217;s offsets. Lets take a look at these in closer detail.</summary></entry><entry><title type="html">Debezium 1.9.4.Final Released</title><link href="https://debezium.io/blog/2022/06/21/debezium-1-9-4-final-released/" rel="alternate" type="text/html" title="Debezium 1.9.4.Final Released"/><published>2022-06-21T00:00:00+00:00</published><updated>2022-06-21T00:00:00+00:00</updated><id>https://debezium.io/blog/2022/06/21/debezium-1-9-4-final-released</id><content type="html" xml:base="https://debezium.io/blog/2022/06/21/debezium-1-9-4-final-released/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;I&amp;#8217;m pleased to announce the release of Debezium &lt;strong&gt;1.9.4.Final&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release primarily focuses on bugfixes and stability; and is the recommended update for all users from earlier versions. This release contains &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project+%3D+DBZ+AND+fixVersion+%3D+1.9.4.Final&quot;&gt;32 resolved issues&lt;/a&gt; overall.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;fixes&quot;&gt;Fixes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release focused entirely on stability and bugfixes. A few noteworthy changes include:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Include event scn in Oracle records &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5225&quot;&gt;DBZ-5225&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Redis Store does not work with GCP Managed Redis &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5268&quot;&gt;DBZ-5268&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Database history recovery will retain old tables after they&amp;#8217;ve been renamed &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4451&quot;&gt;DBZ-4451&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Adding new table with incremental snapshots not working &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4834&quot;&gt;DBZ-4834&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Debezium has never found starting LSN &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5031&quot;&gt;DBZ-5031&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cursor fetch is used for all results during connection &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5084&quot;&gt;DBZ-5084&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Debezium Postgres v1.9.3 fails in Materialize CI &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5204&quot;&gt;DBZ-5204&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cannot convert field type tinyint(1) unsigned to boolean &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5236&quot;&gt;DBZ-5236&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle LogMiner may fail with an in-progress transaction in an archive log that has been deleted &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5256&quot;&gt;DBZ-5256&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Order of source block table names in a rename schema change event is not deterministic &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5257&quot;&gt;DBZ-5257&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Debezium fails to connect to replicaset if a node is down &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5260&quot;&gt;DBZ-5260&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Deadlock during snapshot with Mongo connector &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5272&quot;&gt;DBZ-5272&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In addition, there were several SQL parser fixes for both Oracle and MySQL.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Please refer to the &lt;a href=&quot;/releases/1.9/release-notes#release-1.9.4-final&quot;&gt;release notes&lt;/a&gt; to learn more about all fixed bugs, update procedures, etc.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Many thanks to the following individuals from the community which contributed to Debezium 1.9.4.Final: &lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Bob Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/yannickzj&quot;&gt;Jun Zhao&lt;/a&gt;, Oskar Polak, &lt;a href=&quot;https://github.com/rahulkhanna2&quot;&gt;Rahul Khanna&lt;/a&gt;, &lt;a href=&quot;https://github.com/rk3rn3r&quot;&gt;René Kerner&lt;/a&gt;, &lt;a href=&quot;https://github.com/tim-patterson&quot;&gt;Tim Patterson&lt;/a&gt;, &lt;a href=&quot;https://github.com/vjuranek&quot;&gt;Vojtech Juranek&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;outlook&quot;&gt;Outlook&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The Debezium 1.9 release stream will remain the current long-running version for the next three months. During this time, we will continue to evaluate user reports and do micro-releases to address bugs and regressions depending on severity.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Also, quite a lot of work has gone into Debezium 2.0. We are currently actively working on Debezium 2.0.0.Alpha3 and should have an update on this in the next week.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Stay tuned for more in the coming weeks and stay cool out there!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</content><author><name>Chris Cranford</name></author><category term="releases"/><category term="mongodb"/><category term="mysql"/><category term="postgres"/><category term="sqlserver"/><category term="cassandra"/><category term="oracle"/><category term="db2"/><category term="vitess"/><category term="outbox"/><summary type="html">I&amp;#8217;m pleased to announce the release of Debezium 1.9.4.Final! This release primarily focuses on bugfixes and stability; and is the recommended update for all users from earlier versions. This release contains 32 resolved issues overall.</summary></entry><entry><title type="html">Debezium 2.0.0.Alpha2 Released</title><link href="https://debezium.io/blog/2022/06/09/debezium-2.0-alpha2-released/" rel="alternate" type="text/html" title="Debezium 2.0.0.Alpha2 Released"/><published>2022-06-09T00:00:00+00:00</published><updated>2022-06-09T00:00:00+00:00</updated><id>https://debezium.io/blog/2022/06/09/debezium-2.0-alpha2-released</id><content type="html" xml:base="https://debezium.io/blog/2022/06/09/debezium-2.0-alpha2-released/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;I am thrilled to share that Debezium &lt;strong&gt;2.0.0.Alpha2&lt;/strong&gt; has been released!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release is packed with tons of bugfixes and improvements, &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%202.0.0.Alpha2%20ORDER%20BY%20component%20ASC&quot;&gt;110 issues&lt;/a&gt; resolved in total. Just, WOW!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;A few noteworthy changes include incremental snapshots gaining support for regular expressions and a new stop signal. We also did some housekeeping and removed a number of deprecated configuration options and as well as the legacy MongoDB oplog implementation.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Lets take a look at these in closer detail.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;incremental_snapshot_changes&quot;&gt;Incremental snapshot changes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;First, incremental snapshots has been a tremendous success. The feedback we&amp;#8217;ve gotten from the community has been overwhelmingly positive about how this process works and how its helped streamline capturing changes, particularly for users with very large datasets. So we took an opportunity in this release to build upon that momentum and introduced several new options:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The ability to stop an in-progress incremental snapshot&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Support the use of regular expressions&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;stopping_incremental_snapshots&quot;&gt;Stopping incremental snapshots&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Since we first introduced incremental snapshots, users have asked for a way to stop an in-progress snapshot. To accomplish this, we have added a new signal, &lt;code&gt;stop-snapshot&lt;/code&gt;, which allows stopping an in-progress incremental snapshot. This signal is to be sent just like any other, by inserting a row into the signal table/collection, as shown below:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;class&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;INTO&lt;/span&gt; schema.signal_table (id, type,data) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;unique-id&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;stop-snapshot&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;_&amp;lt;signal payload&amp;gt;_`);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The &lt;code&gt;stop-snapshot&lt;/code&gt; payload looks very similar to its &lt;code&gt;execute-snapshot&lt;/code&gt; counterpart. An example:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;data-collections&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;schema1.table1&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;schema2.table2&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;], &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;incremental&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This example removes both &lt;code&gt;schema1.table1&lt;/code&gt; and &lt;code&gt;schema2.table2&lt;/code&gt; from the incremental snapshot, so long as the table or collection had not already finished its incremental snapshot. If other tables or collections remain outstanding after the removal of those specified by &lt;code&gt;data-collections&lt;/code&gt;, the incremental snapshot will continue to process those that are outstanding. If no other table or collection remains, the incremental snapshot will stop.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Another example of a &lt;code&gt;stop-snapshot&lt;/code&gt; payload is quite simply:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;incremental&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This example does not specify the &lt;code&gt;data-collections&lt;/code&gt; property, it is optional for the &lt;code&gt;stop-snapshot&lt;/code&gt; signal. When this property isn&amp;#8217;t specified, the signal implies the current in-progress incremental snapshot should be stopped entirely. This gives the ability to stop an incremental snapshot without knowledge of the current or outstanding tables or collections yet to be captured.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;signals_support_regular_expressions&quot;&gt;Signals support regular expressions&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Incremental snapshot signals have required the use of explicit table/collection names in the &lt;code&gt;data-collections&lt;/code&gt; payload attribute. While this worked well, there may be situations where broad capture configurations could take advantage of regular expression usage. We already support regular expressions in connector configuration options, such as include/exclude lists, so it made sense to extend that to incremental snapshots as well.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Starting in Debezium 2.0, all incremental snapshot signals can use regular expressions in the &lt;code&gt;data-collections&lt;/code&gt; payload property. Using one of the stop signal examples from above, the payload can be rewritten using regular expressions:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;data-collections&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;schema[1|2].table[1|2]&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;], &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;incremental&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Just like the explicit usage, this signal with regular expressions would also stop both &lt;code&gt;schema1.table1&lt;/code&gt; and &lt;code&gt;schema2.table2&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;removal_of_mongodb_oplog_support&quot;&gt;Removal of MongoDB oplog support&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In Debezium 1.8, we introduced the new MongoDB change stream feature while also deprecating the oplog implementation. The transition to change streams offers a variety of benefits, such as being able to stream changes from non-primary nodes, the ability to emit update events with a full document representation for downstream consumers, and so much more. In short, change streams is just a much more superior way to perform change data capture with MongoDB.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The removal of the oplog implementation also means that MongoDB 3.x is no longer supported. If you are using MongoDB 3.x, you will need to upgrade to at least MongoDB 4.0 or later with Debezium 2.0.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;configuration_option_clean_up&quot;&gt;Configuration option clean-up&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 1.x has seen a lot of evolution over the years. We added connector-specific options to handle migration or specific features that have been deprecated or even replaced by common options that are universal for all connectors. One of the major tasks for Debezium 2.0 is to do some internal housekeeping on configuration options as many have been deprecated.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With that, there is also more configuration housekeeping coming in the future when we look at option namespaces. Suffice to say, it will be important as a part of the upgrade path to review the connector&amp;#8217;s documentation on its relevant options with current connector configurations. You just might find that you can streamline your configurations with fewer options or that some option names have changed entirely.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;other_fixes_improvements&quot;&gt;Other fixes &amp;amp; improvements&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;There are several bugfixes and stability changes in this release, some noteworthy are:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Postgres existing publication is not updated with the new table &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-3921&quot;&gt;DBZ-3921&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MySQL connector increment snapshot failed parse datetime column length when connector set &quot;snapshot.fetch.size&quot;: 20000 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4939&quot;&gt;DBZ-4939&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;DateTimeParseException: Text 'infinity' could not be parsed in Postgres connector &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5014&quot;&gt;DBZ-5014&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;PostgreSQL ENUM default values are missing from generated schema &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5038&quot;&gt;DBZ-5038&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;All connectors now use multi-partitioned codebase &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5042&quot;&gt;DBZ-5042&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle LogMiner: records missed during switch from snapshot to streaming mode &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5085&quot;&gt;DBZ-5085&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Introduce a new field &quot;ts_ms&quot; to identify the process time for schema change event &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5098&quot;&gt;DBZ-5098&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Parsing zero-day fails &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5099&quot;&gt;DBZ-5099&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Altogether, an amazing &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%202.0.0.Alpha2%20ORDER%20BY%20component%20ASC&quot;&gt;110 issues&lt;/a&gt; were fixed for this release.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;A big thank you to all the contributors from the community who worked on this release: Rotem Adhoh, &lt;a href=&quot;https://github.com/AlexMiroshnikov&quot;&gt;Alexey Miroshnikov&lt;/a&gt;, &lt;a href=&quot;https://github.com/ajunwalker&quot;&gt;Andrew Walker&lt;/a&gt;, &lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Bob Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/Chrisss93&quot;&gt;Chris Lee&lt;/a&gt;, &lt;a href=&quot;https://github.com/connorszczepaniak-wk&quot;&gt;Connor Szczepaniak&lt;/a&gt;, &lt;a href=&quot;https://github.com/cmartinez-enve&quot;&gt;César Martínez&lt;/a&gt;, &lt;a href=&quot;https://github.com/elirag&quot;&gt;Eliran Agranovich&lt;/a&gt;, &lt;a href=&quot;https://github.com/EthanZ328&quot;&gt;Ethan Zou&lt;/a&gt;, &lt;a href=&quot;https://github.com/gunnarmorling&quot;&gt;Gunnar Morling&lt;/a&gt;, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/Himanshu-LT&quot;&gt;Himanshu Mishra&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcechace&quot;&gt;Jakub Cechacek&lt;/a&gt;, &lt;a href=&quot;https://github.com/Jiabao-Sun&quot;&gt;Jiabao Sun&lt;/a&gt;, &lt;a href=&quot;https://github.com/novotnyJiri&quot;&gt;Jiri Novotny&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/markallanson&quot;&gt;Mark Allanson&lt;/a&gt;, &lt;a href=&quot;https://github.com/alwaysbemark&quot;&gt;Mark Bereznitsky&lt;/a&gt;, &lt;a href=&quot;https://github.com/MartinMedek&quot;&gt;Martin Medek&lt;/a&gt;, &lt;a href=&quot;https://github.com/nathan-bradshaw-at&quot;&gt;Nathan Bradshaw&lt;/a&gt;, &lt;a href=&quot;https://github.com/sagarrao12&quot;&gt;Sagar Rao&lt;/a&gt;, &lt;a href=&quot;https://github.com/morozov&quot;&gt;Sergei Morozov&lt;/a&gt;, &lt;a href=&quot;https://github.com/shichao-an&quot;&gt;Shichao An&lt;/a&gt;, &lt;a href=&quot;https://github.com/smiklosovic&quot;&gt;Stefan Miklosovic&lt;/a&gt;, &lt;a href=&quot;https://github.com/troeselereos&quot;&gt;Timo Roeseler&lt;/a&gt;, &lt;a href=&quot;https://github.com/ramanenka&quot;&gt;Vadzim Ramanenka&lt;/a&gt;, &lt;a href=&quot;https://github.com/vjuranek&quot;&gt;Vojtech Juranek&lt;/a&gt;, and &lt;a href=&quot;https://github.com/y5w&quot;&gt;Yang&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;whats_next&quot;&gt;What&amp;#8217;s Next?&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;So while this release is a bit behind schedule, Debezium 2.0 is shaping up quite well.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The next major milestones includes unifying snapshot modes across connectors, a new &lt;code&gt;Snapshotter&lt;/code&gt; API for all connectors, compactable JSON database history, offset unification, offset storage API and much more. So the coming weeks do have a lot in store, as we continue to work on Debezium 2.0. And as usual, you can expect some (hopefully all) of these in approximately 3-weeks, sticking to our usual release cadence.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Until then, let the data capturing continue!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</content><author><name>Chris Cranford</name></author><category term="releases"/><category term="mysql"/><category term="postgres"/><category term="sqlserver"/><category term="cassandra"/><category term="oracle"/><category term="db2"/><category term="vitess"/><category term="outbox"/><summary type="html">I am thrilled to share that Debezium 2.0.0.Alpha2 has been released! This release is packed with tons of bugfixes and improvements, 110 issues resolved in total. Just, WOW! A few noteworthy changes include incremental snapshots gaining support for regular expressions and a new stop signal. We also did some housekeeping and removed a number of deprecated configuration options and as well as the legacy MongoDB oplog implementation. Lets take a look at these in closer detail.</summary></entry><entry><title type="html">Debezium 1.9.3.Final Released</title><link href="https://debezium.io/blog/2022/06/02/debezium-1-9-3-final-released/" rel="alternate" type="text/html" title="Debezium 1.9.3.Final Released"/><published>2022-06-02T00:00:00+00:00</published><updated>2022-06-02T00:00:00+00:00</updated><id>https://debezium.io/blog/2022/06/02/debezium-1-9-3-final-released</id><content type="html" xml:base="https://debezium.io/blog/2022/06/02/debezium-1-9-3-final-released/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As the summer nears, I&amp;#8217;m excited to announce the release of Debezium &lt;strong&gt;1.9.3.Final&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release primarily focuses on bugfixes and stability; however, there are some notable feature enhancements. Lets take a moment to cool off and &quot;dive&quot; into these new features in a bit of detail :).&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;decoding_binary_payloads_with_mongodb_and_outbox&quot;&gt;Decoding binary payloads with MongoDB and Outbox&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Databases have had support for storing binary data since the beginning, and there are a number of reasons that applications favor using a database for this over other alternatives. Binary data doesn&amp;#8217;t always have to be information like images, thumbnails, or binary documents like PDFs, it can also include serialized objects too.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;When using the outbox pattern with MongoDB and Avro serialization, the outbox&amp;#8217;s payload field is the only value that is emitted in the message&amp;#8217;s value. When the payload consists of binary data, as shown below, it is emitted as-is and can lead to some serialization issues with consumers of the topic.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: { &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;$binary&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;Z&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;J&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;integer&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;Q&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt; } }&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In this release, we&amp;#8217;ve deprecated the &lt;code&gt;ByteBufferConverter&lt;/code&gt; and we&amp;#8217;ve introduced two new converters in its place:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;ByteArrayConverter&lt;/code&gt;: converts payload to be delivered as it is, a &lt;code&gt;byte[]&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;BinaryDataConverter&lt;/code&gt;: converts payload to be delivered as either a &lt;code&gt;ByteBuffer&lt;/code&gt; or &lt;code&gt;Byte[]&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;For this use case, we&amp;#8217;re going to make use of the new &lt;code&gt;ByteArrayConverter&lt;/code&gt; as we want to emit this payload&amp;#8217;s value as the raw &lt;code&gt;byte[]&lt;/code&gt;. In the connector configuration, the &lt;code&gt;value.converter&lt;/code&gt; configuration option must be set to handle this use case.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;properties&quot;&gt;transforms=outbox,... transforms.outbox.type=io.debezium.connector.monogdb.transforms.outbox.MongoEventRouter value.converter=io.debezium.converters.ByteArrayConverter&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Now the data will be emitted to the broker as-is, as a byte-array that can be safely consumed by consumers. Thanks to Nathan Bradshaw for this excellent contribution!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;heartbeat_action_queries_with_oracle&quot;&gt;Heartbeat action queries with Oracle&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The heartbeat action query is a feature that allows a Debezium connector to write records to the source database and to capture those records during the event processing loop. This was first introduced for PostgreSQL to deal with situations when captured tables change less frequently than other non-captured tables, causing unintended WAL growth.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;For Oracle using the LogMiner implementation, a similar problem occurs that impacts the connector&amp;#8217;s ability to restart due to the offset SCN not being advanced on a regular interval due to changes being made to other tables that are not captured, whether they are part of the same pluggable database or another.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;To enable heartbeat action queries, the connector must be configured with:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;properties&quot;&gt;heartbeat.interval.ms=1000 heartbeat.action.query=INSERT INTO heartbeat (id) values (SYSDATE) table.include.list=MYSCHEMA.HEARTBEAT,...&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The heartbeat functionality must first be enabled by specifying the &lt;code&gt;heartbeat.interval.ms&lt;/code&gt;. This controls how often the connector generates heartbeat events. If this value is not greater-than &lt;code&gt;0&lt;/code&gt;, then heartbeats are disabled.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Next, to specifically use the action query feature, the &lt;code&gt;heartbeat.action.query&lt;/code&gt; option must be given. This specifies a SQL statement that will be executed on each heartbeat interval. This statement can be either an &lt;code&gt;INSERT&lt;/code&gt; or an &lt;code&gt;UPDATE&lt;/code&gt;, as long as the resulting SQL operation generates a row change.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Finally, the action query must operate on a table that is included in the connector&amp;#8217;s filter configuration. Like any other captured table, the table must also be configured with the correct supplemental logging so that the event is captured.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With this configuration in place, and assuming no long-running transaction, the offset SCN will advance on each heartbeat.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;oracle_logminer_session_duration_is_now_controllable&quot;&gt;Oracle LogMiner session duration is now controllable&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The Debezium Oracle connector&amp;#8217;s LogMiner session duration has always been based on how often the redo log switches. Generally, this behavior has worked well for most environments; however, in low traffic environments or during off-peak hours, this has the potential to re-use the same LogMiner session for a longer period of time that can lead to ORA-04030 exceptions when the PGA memory is exhausted.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;A new configuration option has been added, &lt;code&gt;log.mining.session.max.ms&lt;/code&gt;, allowing full control over the maximum duration of an Oracle LogMiner session. When set to a value greater-than &lt;code&gt;0&lt;/code&gt;, the connector will automatically close and restart the mining session if the maximum duration is reached or a log switch occurs, whichever comes first. Oracle environments with low volume, particularly during off-peak hours, should no longer notice any PGA memory concerns when enabling this new option. Coordinate with your database administrator team to determine the best value based on your environment&amp;#8217;s configuration and activity.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;further_changes&quot;&gt;Further Changes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;But that&amp;#8217;s not all, there were also a number of bugfixes that are noteworthy, including but not limited to:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;MySQL connector increment snapshot failed parse datetime column lenth when connector set &quot;snapshot.fetch.size&quot;: 20000 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4939&quot;&gt;DBZ-4939&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;InstanceAlreadyExistsException during MongoDb connector metrics registration &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5011&quot;&gt;DBZ-5011&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;DateTimeParseException: Text 'infinity' could not be parsed in Postgres connector &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5014&quot;&gt;DBZ-5014&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;4 Connections per connector (postgres) &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5074&quot;&gt;DBZ-5074&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle Logminer: records missed during switch from snapshot to streaming mode &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5085&quot;&gt;DBZ-5085&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cannot Set debezium.sink.kafka.producer.ssl.endpoint.identification.algorithm to empty value &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5105&quot;&gt;DBZ-5105&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MilliSecondsBehindSource is not reported by SQL Server connector &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5137&quot;&gt;DBZ-5137&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;ExtractNewRecordState SMT Replaces Null Value with Column&amp;#8217;s Default Value &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5166&quot;&gt;DBZ-5166&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle connector metrics tracking of rollback and abandoned transactions may cause high memory usage &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5179&quot;&gt;DBZ-5179&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We strongly recommend upgrading to 1.9.3.Final to get the latest improvements both in performance and stability.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Overall, &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20and%20fixVersion%20%3D%201.9.3.Final&quot;&gt;47 issues&lt;/a&gt; were fixed in this release. Please refer to the &lt;a href=&quot;/releases/1.9/release-notes#release-1.9.3-final&quot;&gt;release notes&lt;/a&gt; to learn more about all fixed bugs, update procedures, etc.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Many thanks to the following individuals from the community which contributed to Debezium 1.9.3.Final: &lt;a href=&quot;https://github.com/AlexMiroshnikov&quot;&gt;Alexey Miroshnikov&lt;/a&gt;, &lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Bob Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/connorszczepaniak-wk&quot;&gt;Connor Szczepaniak&lt;/a&gt;, &lt;a href=&quot;https://github.com/cmartinez-enve&quot;&gt;César Martínez&lt;/a&gt;, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/Himanshu-LT&quot;&gt;Himanshu Mishra&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcechace&quot;&gt;Jakub Cechacek&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/markallanson&quot;&gt;Mark Allanson&lt;/a&gt;, &lt;a href=&quot;https://github.com/alwaysbemark&quot;&gt;Mark Bereznitsky&lt;/a&gt;, &lt;a href=&quot;https://github.com/nathan-bradshaw-at&quot;&gt;Nathan Bradshaw&lt;/a&gt;, &lt;a href=&quot;https://github.com/morozov&quot;&gt;Sergei Morozov&lt;/a&gt;, &lt;a href=&quot;https://github.com/smiklosovic&quot;&gt;Stefan Miklosovic&lt;/a&gt;, &lt;a href=&quot;https://github.com/ramanenka&quot;&gt;Vadzim Ramanenka&lt;/a&gt;, and &lt;a href=&quot;https://github.com/vjuranek&quot;&gt;Vojtech Juranek&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;outlook&quot;&gt;Outlook&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The Debezium 1.9 release stream will remain the current long-running version for the next three months. During this time, we will continue to evaluate user reports and do micro-releases to address bugs and regressions depending on severity.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Also, quite a lot of work has gone into Debezium 2.0. We intend to release Debezium 2.0.0.Alpha2 next week, will releases to follow about every three weeks thereafter.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Stay tuned for more in the coming weeks and stay cool out there!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</content><author><name>Chris Cranford</name></author><category term="releases"/><category term="mongodb"/><category term="mysql"/><category term="postgres"/><category term="sqlserver"/><category term="cassandra"/><category term="oracle"/><category term="db2"/><category term="vitess"/><category term="outbox"/><summary type="html">As the summer nears, I&amp;#8217;m excited to announce the release of Debezium 1.9.3.Final! This release primarily focuses on bugfixes and stability; however, there are some notable feature enhancements. Lets take a moment to cool off and &quot;dive&quot; into these new features in a bit of detail :).</summary></entry><entry><title type="html">Switching to Java 11/17</title><link href="https://debezium.io/blog/2022/05/04/switch-to-java-11/" rel="alternate" type="text/html" title="Switching to Java 11/17"/><published>2022-05-04T00:00:00+00:00</published><updated>2022-05-04T00:00:00+00:00</updated><id>https://debezium.io/blog/2022/05/04/switch-to-java-11</id><content type="html" xml:base="https://debezium.io/blog/2022/05/04/switch-to-java-11/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As you probably noticed, we have started work on Debezium 2.0. One of &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-3899&quot;&gt;the planned changes&lt;/a&gt; for the 2.0 release is &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4949&quot;&gt;to switch to Java 11 as a baseline&lt;/a&gt;. While some Java build providers still support Java 8, other Java 8 distributions already reached their end of life/support. Users are moving to Java 11 anyways, as surveys like New Relic&amp;#8217;s &lt;a href=&quot;https://newrelic.com/resources/report/2022-state-of-java-ecosystem&quot;&gt;State of the Java Ecosystem Report&lt;/a&gt; indicate. But it is not only matter of support: Java 11 comes with various performance improvements, useful tools like JDK Flight Recorder, which was open-sourced in Java 11, and more. So we felt it was about time to start thinking about using a more recent JDK as the baseline for Debezium, and the new major release is a natural milestone when to do the switch.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Starting with the first release of Debezium 2.0, &lt;a href=&quot;/blog/2022/04/28/debezium-2.0-alpha1-released/&quot;&gt;2.0.0.Alpha1&lt;/a&gt;, Debezium bits will be compiled to Java 11 byte code. Therefore, Java 11 will be required to run Debezium in the next major update. Also, if you use any of the Debezium bits as a library in your project (using the Debezium &lt;a href=&quot;/documentation/reference/stable/development/engine.html&quot;&gt;embedded engine&lt;/a&gt;), you will have to switch to Java 11.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;But wait, what does Java 11/17 in the title mean? Is it there just to scare you, or we are going to actually switch to Java 17 right away?&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&amp;lt;dramatic pause here&amp;gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;No, we don&amp;#8217;t want to scare you. We are actually planning to switch to Java 17, but only for the test suite. Please note that both Java 11 and 17 are long term support (LTS) releases. We don&amp;#8217;t want to move Java 17 for the actual Debezium artifacts just yet, as it can be an issue for substantial amount of Debezium users; as e.g. the aforementioned New Relic report shows that most of the users are still on Java 11 and of course we don&amp;#8217;t want to exclude them. However, using Java 17 for tests doesn&amp;#8217;t affect users in any way, and will allow us to use some more recent Java features in the tests, like e.g. * &lt;a href=&quot;https://openjdk.java.net/jeps/378&quot;&gt;text blocks&lt;/a&gt;, which for instance simplify the usage of multi-line JSON or SQL strings, * &lt;a href=&quot;https://openjdk.java.net/jeps/384&quot;&gt;records&lt;/a&gt;, which can improve readability of the stream operations heavily used in our tests, * &lt;a href=&quot;https://openjdk.java.net/jeps/361&quot;&gt;switch expressions&lt;/a&gt;, and more.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Pretty sweet, right?&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;implementation&quot;&gt;Implementation&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Setting different byte code levels for code and tests is pretty easy with Maven, you just need to set the following properties:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;maven.compiler.release&amp;gt;&lt;/span&gt;11&lt;span class=&quot;tag&quot;&gt;&amp;lt;/maven.compiler.release&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;maven.compiler.testRelease&amp;gt;&lt;/span&gt;17&lt;span class=&quot;tag&quot;&gt;&amp;lt;/maven.compiler.testRelease&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Please note that we&amp;#8217;re using the &lt;code&gt;release&lt;/code&gt; option instead of the legacy &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;target&lt;/code&gt; options, which prevents the accidental usage of Java APIs not present in the targeted Java version. See e.g. Gunnar&amp;#8217;s blog post &lt;a href=&quot;https://www.morling.dev/blog/bytebuffer-and-the-dreaded-nosuchmethoderror/&quot;&gt;ByteBuffer and the Dreaded NoSuchMethodError&lt;/a&gt; for more details.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;After switching to Java 11, the &lt;a href=&quot;https://maven.apache.org/plugins/maven-checkstyle-plugin/&quot;&gt;Maven Checkstyle plug-in&lt;/a&gt; and the &lt;a href=&quot;https://code.revelc.net/impsort-maven-plugin/&quot;&gt;ImpSort plug-in&lt;/a&gt; (a plug-in which takes care of proper import ordering) started to fail. However, bumping their versions to the latest releases has solved all the issues.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This was the easy part. The most difficult part was the Debezium &lt;a href=&quot;/documentation/reference/stable/connectors/cassandra.html&quot;&gt;connector for Apache Cassandra&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;cassandra_connector_tests&quot;&gt;Cassandra Connector Tests&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Since &lt;a href=&quot;/blog/2022/04/06/debezium-1.9-final-released/&quot;&gt;version 1.9&lt;/a&gt;, the Cassandra connector provides support for Cassandra 3 as well as for Cassandra 4. Cassandra 4 &lt;a href=&quot;https://cassandra.apache.org/doc/4.0/cassandra/new/java11.html&quot;&gt;works like a charm with Java 11&lt;/a&gt;, but running Cassandra 3 with Java 11 is not possible (or at least requires some hacking). The existing test implementation for this connector didn&amp;#8217;t run Cassandra in a container as we do it in tests for all other DB connectors, but instead runs Cassandra in embedded mode, i.e. within the same JVM and process as the tests themselves. Therefore if you wanted to run the tests with Java 11 (or 17), tests for the Cassandra 3 connector module would fail.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The obvious solution is to run Cassandra in a container with Java 8. This sounds good, but this approach has one pitfall. The Cassandra connector needs access to Cassandra log files as it obtains CDC events from them, so the tests need to access Cassandra files in the container. This can be solved quite easily using a temporary directory, for instance within the &lt;code&gt;target&lt;/code&gt; directory, mounting it as a volume into the container running Cassandra. Cassandra running in the container can later on use this mounted volume for storing its data.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The real issue starts when you try to do the cleanup after the tests. As Cassandra runs in the container under a dedicated user named &lt;code&gt;cassandra&lt;/code&gt;, which is very likely not present on the test machine (or with a different UID/GID), cleanup fails when it tries to delete the temporary directory with Cassandra files. These files were created in that temporal directory mounted into the container and not in Docker FS overlay, so that are present in the &lt;code&gt;target&lt;/code&gt; directory. As the files were created by the &lt;code&gt;cassandra&lt;/code&gt; user, which is very likely different user than one who runs the tests, user running the tests has insufficient rights to delete files created by &lt;code&gt;cassandra&lt;/code&gt; user. Trying to delete them from Cassandra&amp;#8217;s container on Cassandra exit in some wrapper script turned out to be quite cumbersome and not very reliable.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The most promising solution proved to involve starting a second container with the same &lt;code&gt;cassandra&lt;/code&gt; user with access to the mounted volume and cleaning up the files after the first Cassandra container had already stopped.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We considered two options for running containers:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://dmp.fabric8.io/&quot;&gt;Fabric8 Docker Maven plugin&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.testcontainers.org/&quot;&gt;Testcontainers&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We use the Fabric8 plugin in the rest of the project, which suggests to use it also in this case to have uniformity across the project. On the other hand, using Testcontainers would make tests more convenient for the developers (who actually use tests after all!), as it allows to run the tests directly from IDE without starting the container manually.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In the end, the decision was driven by the fact that running a cleanup container is not possible with the Fabric8 plugin. Maven doesn&amp;#8217;t allow to execute different configurations in the same phase and therefore it&amp;#8217;s not possible to stop the Cassandra container in the &lt;code&gt;post-integration-test&lt;/code&gt; phase and at the same time run a cleanup container in this phase. Testcontainers allow starting and stopping containers programmatically when needed, letting us define the images directly in the test code so we don&amp;#8217;t need any additional &lt;code&gt;Dockerfile&lt;/code&gt; , and cleaning up the container is just an implementation detail hidden in the test itself. Having the ability to run the tests directly from an IDE, without having to manually start and stop a container with the database, is a nice benefit on top of these things.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The only tricky thing when using Testcontainers was that when we tried to remove the log files using Docker&amp;#8217;s &lt;code&gt;cmd&lt;/code&gt; command, Testcontainers randomly failed, stating that the container didn&amp;#8217;t start in spite of the fact that all Cassandra files were actually deleted. The container probably ran so fast that it finished before Testcontainers noticed it. Finally, we solved it by adding a short &lt;code&gt;sleep&lt;/code&gt; in the container and executing an additional command in the container which does the cleanup.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The final cleanup code using Testcontainers looks like this:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;xml&quot;&gt;@AfterClass public static void tearDownClass() throws IOException, InterruptedException { destroyTestKeyspace(); cassandra.stop(); GenericContainer cleanup = new GenericContainer(new ImageFromDockerfile() .withDockerfileFromBuilder(builder -&lt;span class=&quot;error&quot;&gt;&amp;gt;&lt;/span&gt; builder .from(&amp;quot;eclipse-temurin:8-jre-focal&amp;quot;) .volume(&amp;quot;/var/lib/cassandra&amp;quot;) .cmd(&amp;quot;sleep&amp;quot;, &amp;quot;10&amp;quot;) // Give TC some time to find out container is running. .build())) .withFileSystemBind(cassandraDir, CASSANDRA_SERVER_DIR, BindMode.READ_WRITE); cleanup.start(); cleanup.execInContainer( &amp;quot;rm&amp;quot;, &amp;quot;-rf&amp;quot;, CASSANDRA_SERVER_DIR + &amp;quot;/data&amp;quot;, CASSANDRA_SERVER_DIR + &amp;quot;/cdc_raw_directory&amp;quot;, CASSANDRA_SERVER_DIR + &amp;quot;/commitlog&amp;quot;, CASSANDRA_SERVER_DIR + &amp;quot;/hints&amp;quot;, CASSANDRA_SERVER_DIR + &amp;quot;/saved_caches&amp;quot;); cleanup.stop(); }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Once we solved the issue with the Cassandra tests, we were mostly done and were ready to use Java 11 in the main Debezium code and Java 17 for our tests.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;open_issues&quot;&gt;Open Issues&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We need more battle testing to be sure that everything works well with Java 11/17. Your help with testing and bug reports would be very valuable here and more than welcome. Currently we are aware of one minor unsolved issue related to the Java update. Some IDEs cannot distinguish between &lt;code&gt;maven.compiler.release&lt;/code&gt; and &lt;code&gt;maven.compiler.testRelease&lt;/code&gt; (or it&amp;#8217;s not very clear to us how to set it up). For example this test using a &lt;a href=&quot;https://openjdk.java.net/jeps/378&quot;&gt;text block&lt;/a&gt; is marked as an error in the IDE:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;exampleblock centered-image responsive-image&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;img src=&quot;/assets/images/2022-05-04-switch-to-java-11/idea_error.png&quot; style=&quot;max-width:90%;&quot; class=&quot;responsive-image&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Test using text block in IntelliJ Idea.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;You can manually set the Java level to 17, but in this case you may unintentionally use Java &amp;gt; 11 features in non-test code without the IDE letting you know (which admittedly isn&amp;#8217;t too much of a problem, as the next Maven build, e.g. on CI, would catch that issue). Moreover, e.g. Idea resets the code level upon any changes in the &lt;code&gt;pom.xml&lt;/code&gt; files. Have you solved this issue? Or do you use an IDE which doesn&amp;#8217;t have issues with mixing different Java levels? Please share your experiences in the discussion!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</content><author><name>Vojtěch Juránek</name></author><category term="community"/><category term="news"/><summary type="html">As you probably noticed, we have started work on Debezium 2.0. One of the planned changes for the 2.0 release is to switch to Java 11 as a baseline. While some Java build providers still support Java 8, other Java 8 distributions already reached their end of life/support. Users are moving to Java 11 anyways, as surveys like New Relic&amp;#8217;s State of the Java Ecosystem Report indicate. But it is not only matter of support: Java 11 comes with various performance improvements, useful tools like JDK Flight Recorder, which was open-sourced in Java 11, and more. So we felt it was about time to start thinking about using a more recent JDK as the baseline for Debezium, and the new major release is a natural milestone when to do the switch.</summary></entry><entry><title type="html">Debezium 2.0.0.Alpha1 Released</title><link href="https://debezium.io/blog/2022/04/28/debezium-2.0-alpha1-released/" rel="alternate" type="text/html" title="Debezium 2.0.0.Alpha1 Released"/><published>2022-04-28T00:00:00+00:00</published><updated>2022-04-28T00:00:00+00:00</updated><id>https://debezium.io/blog/2022/04/28/debezium-2.0-alpha1-released</id><content type="html" xml:base="https://debezium.io/blog/2022/04/28/debezium-2.0-alpha1-released/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;I am excited to share that Debezium &lt;strong&gt;2.0.0.Alpha1&lt;/strong&gt; has been released!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release is the first of several planned pre-releases of Debezium 2.0 over the next five months. Each pre-release plans to focus on strategic changes in the hope that as we move forward, changes can be easily tested and regressions addressed quickly.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In this release, some of the most notable changes include requiring Java 11 to use Debezium or any of its components, the removal of &lt;code&gt;wal2json&lt;/code&gt; support for PostgreSQL and the legacy MySQL connector implementation, as well as some notable features such as improved Debezium Server Google Pub/Sub sink support, and a multitude of bugfixes. Let&amp;#8217;s take a look at a few of these.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;java_11_required&quot;&gt;Java 11 required&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We have wanted to make the jump to using Java 11 as a build requirement for quite some time now, and with Debezium 2.0 this is now possible. With Java 11, this enables us to take advantage of new language features, such as the new &lt;code&gt;String&lt;/code&gt; API and &lt;code&gt;Predicate&lt;/code&gt; support changes in the codebase, while also benefiting from many Java performance improvements.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Our very own Vojtech Juranek will be publishing a blog post next week that discusses the switch to Java 11 and 17 in greater detail. I highly recommend giving it a read as it provides a deep dive into the technical background &amp;amp; effort that went into making this possible.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;So before migrating to Debezium 2.0, be sure that Java 11 is available.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;postgresql_wal2json_support_removed&quot;&gt;PostgreSQL wal2json support removed&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The PostgreSQL connector has supported several plugins throughout Debezium 1.x, including &lt;code&gt;decoderbufs&lt;/code&gt;, &lt;code&gt;wal2json&lt;/code&gt;, and &lt;code&gt;pgoutput&lt;/code&gt;. PostgreSQL 9.6 recently reached &lt;a href=&quot;https://www.postgresql.org/support/versioning/&quot;&gt;end of life&lt;/a&gt; on November 11, 2021. This presented a great opportunity for us to review the supported decoders and to see whether we could streamline those options.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Since &lt;code&gt;pgoutput&lt;/code&gt; is a native decoder supported by all non-EOL versions of PostgreSQL (PG10+), it made sense to remove &lt;code&gt;wal2json&lt;/code&gt;. Reducing the number of decoders to 2 (down from 3), allows us to streamline the code for PostgreSQL, reduces the overall maintenance cost of the connector, and gives us a much more narrow target for overall support.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;If you are still using PostgreSQL 9.6 or were using &lt;code&gt;wal2json&lt;/code&gt; previously, you will need to migrate to at least PostgreSQL 10.0 or to &lt;code&gt;decoderbufs&lt;/code&gt; or &lt;code&gt;pgougput&lt;/code&gt; respectively before upgrading to Debezium 2.0.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;legacy_mysql_implementation_removed&quot;&gt;Legacy MySQL implementation removed&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As some of you may or may not know, we implemented the MySQL connector based on the common-connector framework back in Debezium 1.5 (Feb 2021). As a part of that re-write, we introduced the ability for MySQL users to enable the legacy connector behavior using the configuration option &lt;code&gt;internal.implementation&lt;/code&gt; set as &lt;code&gt;legacy&lt;/code&gt;. This legacy implementation was deprecated in favor of the new common-connector framework behavior. With Debezium 2.0, this &lt;code&gt;internal.implementation&lt;/code&gt; configuration option and the legacy connector implementation have been removed.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;If your current connector deployment relies on this legacy implementation, you should be aware that by upgrading to Debezium 2.0, the connector will no longer use that older implementation and will use the common-connector implementation only. Feature-wise, both implementations are on-par with one another with one exception: the legacy implementation had experimental support for changing filter configurations. If you have relied on this legacy behavior, be aware that feature is no longer available.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;other_fixes_improvements&quot;&gt;Other fixes &amp;amp; improvements&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;There are several bugfixes and stability changes in this release, some noteworthy are:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Implement Pub/Sub Lite change consumer &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4450&quot;&gt;DBZ-4450&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Add Google Pub/Sub emulator support &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4491&quot;&gt;DBZ-4491&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Making Postgres &lt;code&gt;PSQLException: This connection has been closed.&lt;/code&gt; retriable &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4948&quot;&gt;DBZ-4948&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Should store event header timestamp in HistoryRecord &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4998&quot;&gt;DBZ-4998&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Getting java.sql.SQLException: ORA-01291: missing logfile while running with archive log only &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4879&quot;&gt;DBZ-4879&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Debezium uses wrong LCR format for Oracle 12.1 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4932&quot;&gt;DBZ-4932&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;NPE caused by io.debezium.connector.oracle.antlr.listener.ColumnDefinitionParserListener.resolveColumnDataType &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4976&quot;&gt;DBZ-4976&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Outbox Transform does not allow expanded payload with additional fields in the envelope &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4989&quot;&gt;DBZ-4989&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;CLOB with single quotes causes parser exception &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4994&quot;&gt;DBZ-4994&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cassandra 3 handler does not process partition deletions correctly &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5022&quot;&gt;DBZ-5022&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;SQL Server in multi-partition mode fails if a new database is added to an existing configuration &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5033&quot;&gt;DBZ-5033&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade to Quarkus 2.8.2.Final &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5062&quot;&gt;DBZ-5062&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Altogether, &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%202.0.0.Alpha1%20ORDER%20BY%20component%20ASC&quot;&gt;55 issues&lt;/a&gt; were fixed for this release.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;A big thank you to all the contributors from the community who worked on this release: Wang Min Chao, &lt;a href=&quot;https://github.com/jchipmunk&quot;&gt;Andrey Pustovetov&lt;/a&gt;, &lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/bmorganpa&quot;&gt;Brad Morgan&lt;/a&gt;, &lt;a href=&quot;https://github.com/calinilie&quot;&gt;Calin Laurentiu Ilie&lt;/a&gt;, &lt;a href=&quot;https://github.com/chadthman&quot;&gt;Chad Marmon&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/gunnarmorling&quot;&gt;Gunnar Morling&lt;/a&gt;, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcechace&quot;&gt;Jakub Cechacek&lt;/a&gt;, &lt;a href=&quot;https://github.com/domsj&quot;&gt;Jan Doms&lt;/a&gt;, &lt;a href=&quot;https://github.com/novotnyJiri&quot;&gt;Jiri Novotny&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/LarsWerkman&quot;&gt;Lars Werkman&lt;/a&gt;, &lt;a href=&quot;https://github.com/MartinMedek&quot;&gt;Martin Medek&lt;/a&gt;, &lt;a href=&quot;https://github.com/yzia2000&quot;&gt;Mohammad Yousuf Minhaj Zia&lt;/a&gt;, &lt;a href=&quot;https://github.com/zalmane&quot;&gt;Oren Elias&lt;/a&gt;, &lt;a href=&quot;https://github.com/ypt&quot;&gt;Paul Tzen&lt;/a&gt;, &lt;a href=&quot;https://github.com/PlugaruT&quot;&gt;Plugaru Tudor&lt;/a&gt;, &lt;a href=&quot;https://github.com/rk3rn3r&quot;&gt;René Kerner&lt;/a&gt;, &lt;a href=&quot;https://github.com/morozov&quot;&gt;Sergei Morozov&lt;/a&gt;, &lt;a href=&quot;https://github.com/smiklosovic&quot;&gt;Stefan Miklosovic&lt;/a&gt;, &lt;a href=&quot;https://github.com/vjuranek&quot;&gt;Vojtech Juranek&lt;/a&gt;, and &lt;a href=&quot;https://github.com/spicy-sauce&quot;&gt;Yossi Shirizli&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;whats_next&quot;&gt;What&amp;#8217;s Next?&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We have resolved the runtime problem with Debezium Server in the 1.9.1.Final release, so you can expect a 1.9.2.Final later this week which will also address other bugfixes. You can continue to expect updates to 1.9 in the weeks that follow as bugs are reported and fixes are made to address those.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As we continue our efforts on Debezium 2.0, you can expect a second pre-release in the coming weeks, sticking to our regular 3-week cadence. In this next pre-release, we plan to focus on message schema versioning/naming, connector configuration changes with new pass-thru namespaces, removal of deprecated options, as well as unifying default value handling, just to name a few on the roadmap.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;And speaking of Debezium&amp;#8217;s roadmap, stay tuned as we&amp;#8217;ll have more to share about Debezium 2.0, its future releases of 2.x, all on our roadmap soon!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</content><author><name>Chris Cranford</name></author><category term="releases"/><category term="mysql"/><category term="postgres"/><category term="sqlserver"/><category term="cassandra"/><category term="oracle"/><category term="db2"/><category term="vitess"/><category term="outbox"/><summary type="html">I am excited to share that Debezium 2.0.0.Alpha1 has been released! This release is the first of several planned pre-releases of Debezium 2.0 over the next five months. Each pre-release plans to focus on strategic changes in the hope that as we move forward, changes can be easily tested and regressions addressed quickly. In this release, some of the most notable changes include requiring Java 11 to use Debezium or any of its components, the removal of wal2json support for PostgreSQL and the legacy MySQL connector implementation, as well as some notable features such as improved Debezium Server Google Pub/Sub sink support, and a multitude of bugfixes. Let&amp;#8217;s take a look at a few of these.</summary></entry><entry><title type="html">Debezium 1.9.1.Final Released</title><link href="https://debezium.io/blog/2022/04/21/debezium-1.9.1-final-released/" rel="alternate" type="text/html" title="Debezium 1.9.1.Final Released"/><published>2022-04-21T00:00:00+00:00</published><updated>2022-04-21T00:00:00+00:00</updated><id>https://debezium.io/blog/2022/04/21/debezium-1.9.1-final-released</id><content type="html" xml:base="https://debezium.io/blog/2022/04/21/debezium-1.9.1-final-released/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;I&amp;#8217;m excited to announce the release of Debezium &lt;strong&gt;1.9.1.Final&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release primarily focuses on bugfixes and stability concerns after the 1.9.0.Final release.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;One of the more critical changes addresses a problem with the Oracle connector when stopping and restarting the connector. More specifically, the last committed transaction&amp;#8217;s events would be re-emitted upon restart and should not have been (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4936&quot;&gt;DBZ-4936&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;A second critical problem was that incremental snapshots were not working correctly for MongoDB. When an incremental snapshot signal was sent, a JSON parsing error was raised and should not have been (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5015&quot;&gt;DBZ-5015&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;And finally, there were numerous SQL parsing errors for both MySQL and Oracle that were also addressed (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4976&quot;&gt;DBZ-4976&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4979&quot;&gt;DBZ-4979&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4980&quot;&gt;DBZ-4980&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4994&quot;&gt;DBZ-4994&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4996&quot;&gt;DBZ-4996&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We strongly recommend upgrading to 1.9.1.Final to avoid these issues as well as the other bugfixes that were included as a part of this release.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Overall, &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20and%20fixVersion%20%3D%201.9.1.Final&quot;&gt;29 issues&lt;/a&gt; were fixed in this release. Please refer to the &lt;a href=&quot;/releases/1.9/release-notes#release-1.9.1-final&quot;&gt;release notes&lt;/a&gt; to learn more about all fixed bugs, update procedures, etc.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Many thanks to the following individuals from the community which contributed to Debezium 1.9.1.Final: &lt;a href=&quot;https://github.com/LarsWerkman&quot;&gt; Lars Werkman&lt;/a&gt;, &lt;a href=&quot;https://github.com/jchipmunk&quot;&gt;Andrey Pustovetov&lt;/a&gt;, &lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/bmorganpa&quot;&gt;Brad Morgan&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/yzia2000&quot;&gt;Mohammad Yousuf Minhaj Zia&lt;/a&gt;, &lt;a href=&quot;https://github.com/ypt&quot;&gt;Paul Tzen&lt;/a&gt;, &lt;a href=&quot;https://github.com/spicy-sauce&quot;&gt;Yossi Shirizli&lt;/a&gt;, and &lt;a href=&quot;https://github.com/chadthman&quot;&gt;chadthamn&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;outlook&quot;&gt;Outlook&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The Debezium 1.9 release stream will remain the current long-running version for the next five months. During this time, we will continue to evaluate user reports and do micro-releases to address bugs and regressions.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Also in the coming week, expect to hear updates about Debezium&amp;#8217;s &lt;a href=&quot;/roadmap&quot;&gt;roadmap&lt;/a&gt; as well as a clear plan on Debezium 2.0, it&amp;#8217;s preview releases and what lies ahead for the future. We have a lot in store to share, so be sure to stay tuned!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</content><author><name>Chris Cranford</name></author><category term="releases"/><category term="mongodb"/><category term="mysql"/><category term="postgres"/><category term="sqlserver"/><category term="cassandra"/><category term="oracle"/><category term="db2"/><category term="vitess"/><category term="outbox"/><summary type="html">I&amp;#8217;m excited to announce the release of Debezium 1.9.1.Final! This release primarily focuses on bugfixes and stability concerns after the 1.9.0.Final release.</summary></entry><entry><title type="html">Read-only Incremental Snapshots for MySQL</title><link href="https://debezium.io/blog/2022/04/07/read-only-incremental-snapshots/" rel="alternate" type="text/html" title="Read-only Incremental Snapshots for MySQL"/><published>2022-04-07T00:00:00+00:00</published><updated>2022-04-07T00:00:00+00:00</updated><id>https://debezium.io/blog/2022/04/07/read-only-incremental-snapshots</id><content type="html" xml:base="https://debezium.io/blog/2022/04/07/read-only-incremental-snapshots/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The engineering team at Shopify recently improved the Debezium MySQL connector so that it supports incremental snapshotting for databases without write access by the connector, which is required when pointing Debezium to read-only replicas. In addition, the Debezium MySQL connector now also allows schema changes during an incremental snapshot. This blog post explains the implementation details of those features.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;why_read_only&quot;&gt;Why read-only?&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium added the &lt;a href=&quot;/documentation/reference/stable/connectors/mysql.html#mysql-incremental-snapshots&quot;&gt;incremental snapshotting feature&lt;/a&gt; in the 1.6 release, after Netflix had announced &lt;a href=&quot;https://arxiv.org/pdf/2010.12597v1.pdf&quot;&gt;their change data capture framework&lt;/a&gt;. At Shopify, &lt;a href=&quot;https://shopify.engineering/capturing-every-change-shopify-sharded-monolith&quot;&gt;we use Debezium for change data capture (CDC)&lt;/a&gt;, and we were looking forward to being the early adopters. Besides, we wished to have a solution that is writes and locks-free.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The no writes solution allows to capture changes from read-replicas and provides the highest guarantee that CDC won&amp;#8217;t cause data corruption on the database side.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We&amp;#8217;ve had to coordinate the snapshotting with migrations in the past since schema migrations blockades have affected other projects' development. The solution was to run snapshots only on weekends and as a result, we tried to snapshot as rarely as possible. We saw the opportunity to improve this part of the process as well.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This blog post dives into technical details of the read-only incremental snapshots implementation including lock-free schema changes handling during the incremental snapshot in MySQL connector.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;incremental_snapshots&quot;&gt;Incremental snapshots&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The &lt;a href=&quot;/blog/2021/10/07/incremental-snapshots/&quot;&gt;Incremental Snapshots in Debezium&lt;/a&gt; blog post covers the default implementation in detail. The algorithm utilizes a signaling table for two types of signals:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;olist arabic&quot;&gt; &lt;ol class=&quot;arabic&quot;&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;snapshot-window-open/snapshot-window-close&lt;/code&gt; as watermarks&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;execute-snapshot&lt;/code&gt; as a way to trigger an incremental snapshot&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;For the read-only scenario, we needed to replace both types of signals with alternatives.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;show_master_status_for_high_and_low_watermarks&quot;&gt;SHOW MASTER STATUS for high and low watermarks&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The solution is specific to MySQL and relies on &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/replication-gtids-concepts.html&quot;&gt;global transaction identifiers (GTIDs)&lt;/a&gt;. Therefore, you need to set &lt;code&gt;gtid_mode&lt;/code&gt; to &lt;code&gt;ON&lt;/code&gt; and configure the database to preserve GTID ordering if you&amp;#8217;re reading from the read replica.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Prerequisites:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code&gt;gtid_mode = ON enforce_gtid_consistency = ON if replica_parallel_workers &amp;gt; 0 set replica_preserve_commit_order = ON&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The algorithm runs a &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/show-master-status.html&quot;&gt;SHOW MASTER STATUS&lt;/a&gt; query to get the executed GTID set before and after the chunk selection:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code&gt;low watermark = executed_gtid_set high watermark = executed_gtid_set - low watermark&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In the read-only implementation, the watermarks have a form of GTID sets, e.g. like this: &lt;code&gt;2174B383-5441-11E8-B90A-C80AA9429562:1-3, 24DA167-0C0C-11E8-8442-00059A3C7B00:1-19&lt;/code&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Such watermarks do not appear in the binlog stream. Instead, the algorithm compares each event&amp;#8217;s GTID against the in-memory watermarks. The implementation ensures there are no stale reads and that a chunk only has changes that are not older than events up to low watermark.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;deduplication_algorithm_with_read_only_watermarks&quot;&gt;Deduplication algorithm with read-only watermarks&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In pseudo-code, the algorithm for deduplicating events read from the binlog and events retrieved via snapshot chunks looks like this:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code&gt; (1) pause log event processing (2) GtidSet lwGtidSet := executed_gtid_set from SHOW MASTER STATUS (3) chunk := select next chunk from table (4) GtidSet hwGtidSet := executed_gtid_set from SHOW MASTER STATUS subtracted by lwGtidSet (5) resume log event processing inwindow := false // other steps of event processing loop while true do e := next event from changelog append e to outputbuffer if not inwindow then if not lwGtidSet.contains(e.gtid) //reached the low watermark inwindow := true else if hwGtidSet.contains(e.gtid) //haven't reached the high watermark yet if chunk contains e.key then remove e.key from chunk else //reached the high watermark for each row in chunk do append row to outputbuffer // other steps of event processing loop&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;watermark_checks&quot;&gt;Watermark checks&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;A database transaction can change several rows. In this case, multiple binlog events will have the same GTID. Due to GTIDs not being unique, it affects the logic of computing a chunk selection window. An event updates a window state when the watermark&amp;#8217;s GTID set doesn&amp;#8217;t contain its GTID. After the events like transaction completion and heartbeat, there won&amp;#8217;t be any further binlog events with the same GTID. For those events, it&amp;#8217;s enough to reach the watermark&amp;#8217;s upper bound to trigger a window open/close.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;exampleblock centered-image responsive-image&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;img src=&quot;/assets/images/2022-04-07-read-only-incremental-snapshots/window.png&quot; style=&quot;max-width:90%;&quot; class=&quot;responsive-image&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;strong&gt;Figure 1. A chunk selection window&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The deduplication happens within the chunk selection window as in the default implementation. Finally, the algorithm inserts a deduplicated chunk right after the high watermark:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;exampleblock centered-image responsive-image&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;img src=&quot;/assets/images/2022-04-07-read-only-incremental-snapshots/deduplication.png&quot; style=&quot;max-width:90%;&quot; class=&quot;responsive-image&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;strong&gt;Figure 2. A chunk deduplication&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;no_updates_for_included_tables&quot;&gt;No updates for included tables&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It&amp;#8217;s crucial to receive binlog events for the snapshot to make progress. So the algorithm checks GTIDs of &lt;em&gt;all&lt;/em&gt; the events together with not included tables.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;no_binlog_events&quot;&gt;No binlog events&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The MySQL server sends a heartbeat event after the replication connection was idle for x-seconds. The read-only implementation utilizes heartbeats when the rate of binlog updates is low.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The heartbeat has the same GTID as the latest binlog event. Thus, for a heartbeat, it&amp;#8217;s enough to reach the upper bound of the high watermark.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The algorithm uses the &lt;code&gt;server_uuid&lt;/code&gt; part of a heartbeat&amp;#8217;s GTID to get the max transaction id from the high watermark. The implementation makes sure the high watermark contains a single &lt;code&gt;server_uuid&lt;/code&gt;. An unchanged &lt;code&gt;server_uuid&lt;/code&gt; allows to avoid the scenario when the window is closed too early by a heartbeat. See the image below as an example:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;exampleblock centered-image responsive-image&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;img src=&quot;/assets/images/2022-04-07-read-only-incremental-snapshots/heartbeat.png&quot; style=&quot;max-width:90%;&quot; class=&quot;responsive-image&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;strong&gt;Figure 3. A scenario when the window would have been closed too early by a heartbeat&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;A heartbeat comparison against the low watermark isn&amp;#8217;t needed since it doesn&amp;#8217;t matter if the window was open or not. This simplifies the checks when there are no new events between the high and low watermarks.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;no_changes_between_watermarks&quot;&gt;No changes between watermarks&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;A binlog event can open and close a window right away when there were no binlog events during the chunk selection. In this case, a high watermark will be an empty set. In this case, the snapshot chunk gets inserted right after the low watermark without deduplication.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;exampleblock centered-image responsive-image&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;img src=&quot;/assets/images/2022-04-07-read-only-incremental-snapshots/empty_window.png&quot; style=&quot;max-width:90%;&quot; class=&quot;responsive-image&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;strong&gt;Figure 4. An empty chunk selection window&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;kafka_topic_based_signals&quot;&gt;Kafka topic based signals&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium supports ad-hoc incremental snapshots triggered via inserts to the signaling table. A read-only alternative is to send signals through a specific Kafka topic. The format of the message mimics the signaling table structure. An execute-snapshot Kafka message includes the parameters&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;data-collections&lt;/code&gt; - list of tables to be captured&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;type&lt;/code&gt; - set to INCREMENTAL&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;Key: dbserver1 Value: {&amp;quot;type&amp;quot;:&amp;quot;execute-snapshot&amp;quot;,&amp;quot;data&amp;quot;: {&amp;quot;data-collections&amp;quot;: [&amp;quot;inventory.orders&amp;quot;], &amp;quot;type&amp;quot;: &amp;quot;INCREMENTAL&amp;quot;}}&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The MySQL connector&amp;#8217;s config has a new &lt;a href=&quot;https://debezium.io/documentation/reference/stable/connectors/mysql.html#mysql-property-signal-kafka-topic&quot;&gt;&lt;code&gt;signal.kafka.topic&lt;/code&gt;&lt;/a&gt; property. The topic has to have one partition and the delete retention policy.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;A separate thread retrieves the signal messages from the Kafka topic. The key of the Kafka message needs to match the connector&amp;#8217;s name as set in &lt;code&gt;database.server.name&lt;/code&gt;. The connector will skip events that don&amp;#8217;t correspond to the connector&amp;#8217;s name with a log entry. The message key check allows reusing a signal topic for multiple connectors.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The connector&amp;#8217;s offsets include incremental snapshot context when an incremental snapshot is running. The read-only implementation adds the Kafka signal offset to the incremental snapshot context. Keeping track of the offset allows it not to miss or double process the signal when the connector restarts.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;However, it&amp;#8217;s not required to use Kafka to execute a read-only incremental snapshot and the default &lt;code&gt;execute-snapshot&lt;/code&gt; signal written into a signaling table will also work. Going forward, a REST API for triggering ad-hoc incremental snapshots may be envisioned as well, either exposed through Debezium Server, or as an additional REST resource deployed to Kafka Connect.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;schema_changes_during_incremental_snapshots&quot;&gt;Schema changes during incremental snapshots&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The Debezium MySQL connector &lt;a href=&quot;/documentation/reference/stable/connectors/mysql.html#mysql-property-incremental-snapshot-allow-schema-changes&quot;&gt;allows schema changes during an incremental snapshot&lt;/a&gt;. The connector will detect schema change during an incremental snapshot and re-select a current chunk to avoid locking DDLs.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;em&gt;Note that changes to a primary key are not supported and can cause incorrect results if performed during an incremental snapshot.&lt;/em&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Historized Debezium connectors like the MySQL one parse Data Definition Language (DDL) events such as &lt;code&gt;ALTER TABLE&lt;/code&gt; from the binlog stream. Connectors keep an in-memory representation of each table&amp;#8217;s schema and use those schemas to produce the appropriate change events.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The incremental snapshot implementation uses binlog schema twice:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;olist arabic&quot;&gt; &lt;ol class=&quot;arabic&quot;&gt; &lt;li&gt; &lt;p&gt;at the moment of the chunk selection from the database&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;at the moment of the chunk insertion to the binlog stream&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The chunk&amp;#8217;s schema has to match the binlog schema at both times. Let&amp;#8217;s explore how the algorithm achieves matching schemas in detail.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;matching_chunk_and_binlog_schema_on_selection&quot;&gt;Matching chunk and binlog schema on selection&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;When the incremental snapshot queries a database, the rows have the table&amp;#8217;s latest schema. If the binlog stream is behind, the in-memory schema may be different from the latest schema. The solution is to wait for the connector to receive the DDL event in the binlog stream. After that, the connector can use the cached table&amp;#8217;s structure to produce the correct incremental snapshot events.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;A snapshot chunk is selected using the JDBC API. &lt;a href=&quot;https://docs.oracle.com/en/java/javase/17/docs/api/java.sql/java/sql/ResultSetMetaData.html&quot;&gt;ResultSetMetaData&lt;/a&gt; stores the chunk&amp;#8217;s schema. The challenge is that the schema from ResultSetMetaData and the schema from binlog DDL have different formats, making it hard to determine if they are identical.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The algorithm uses two steps to obtain the matching ResultSet-based and DDL-based schemas. First, the connector queries a table&amp;#8217;s schema between low and high watermarks. As soon as the connector detects the window closure, the binlog schema is up to date with the ResultSetMetaData. After that, the connector queries the database to verify that the schema remains the same. If the schema has changed, then the connector repeats the process.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The algorithm keeps the matching ResultSet and binlog schemas in memory to allow the connector to compare each chunk&amp;#8217;s schema against the cached ResultSet schema.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;When a chunk&amp;#8217;s schema doesn&amp;#8217;t match the cached ResultSet schema, the connector drops the selected chunk. Then the algorithm repeats the verification process of matching ResultSet and binlog schemas. After that, the connector re-selects the same chunk from the database:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;exampleblock centered-image responsive-image&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;img src=&quot;/assets/images/2022-04-07-read-only-incremental-snapshots/schema_change.png&quot; style=&quot;max-width:90%;&quot; class=&quot;responsive-image&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;strong&gt;Figure 5. Binlog schema doesn&amp;#8217;t match chunk schema on chunk selection&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;matching_chunk_and_binlog_schema_on_insertion&quot;&gt;Matching chunk and binlog schema on insertion&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;A DDL event also triggers a chunk re-read for the affected table. A re-read prevents a scenario when a chunk has an older schema than the binlog stream has by the window closure. For example, the picture below illustrates the chunk selection that happened before the schema change:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;exampleblock centered-image responsive-image&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;img src=&quot;/assets/images/2022-04-07-read-only-incremental-snapshots/ddl.png&quot; style=&quot;max-width:90%;&quot; class=&quot;responsive-image&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;strong&gt;Figure 6. Binlog schema doesn&amp;#8217;t match chunk schema on chunk insertion&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;demo&quot;&gt;Demo&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We will use the standard &lt;a href=&quot;https://github.com/debezium/debezium-examples/tree/main/tutorial&quot;&gt;tutorial deployment&lt;/a&gt; to demonstrate read-only ad-hoc incremental snapshotting. We are using &lt;a href=&quot;https://github.com/debezium/debezium-examples/tree/main/tutorial#using-mysql&quot;&gt;MySQL&lt;/a&gt; as the source database. For this demo, you will need to open multiple terminal windows.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In the beginning we will start the deployment, create the signaling Kafka topic, and start the connector:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;# Terminal 1 - start the deployment # Start the deployment export DEBEZIUM_VERSION=1.9 docker-compose -f docker-compose-mysql.yaml up # Terminal 2 # Enable enforce_gtid_consistency and gtid_mode docker-compose -f docker-compose-mysql.yaml exec mysql bash -c 'mysql -p$MYSQL_ROOT_PASSWORD inventory -e &amp;quot;SET GLOBAL enforce_gtid_consistency=ON; SET GLOBAL gtid_mode=OFF_PERMISSIVE; SET GLOBAL gtid_mode=ON_PERMISSIVE; SET GLOBAL gtid_mode=ON;&amp;quot;' # Confirm the changes docker-compose -f docker-compose-mysql.yaml exec mysql bash -c 'mysql -p$MYSQL_ROOT_PASSWORD inventory -e &amp;quot;show global variables like \&amp;quot;%GTID%\&amp;quot;;&amp;quot;' # Create a signaling topic docker-compose -f docker-compose-mysql.yaml exec kafka /kafka/bin/kafka-topics.sh \ --create \ --bootstrap-server kafka:9092 \ --partitions 1 \ --replication-factor 1 \ --topic dbz-signals # Start MySQL connector, capture only customers table and enable signaling curl -i -X POST -H &amp;quot;Accept:application/json&amp;quot; -H &amp;quot;Content-Type:application/json&amp;quot; http://localhost:8083/connectors/ -d @- &amp;lt;&amp;lt;EOF { &amp;quot;name&amp;quot;: &amp;quot;inventory-connector&amp;quot;, &amp;quot;config&amp;quot;: { &amp;quot;connector.class&amp;quot;: &amp;quot;io.debezium.connector.mysql.MySqlConnector&amp;quot;, &amp;quot;tasks.max&amp;quot;: &amp;quot;1&amp;quot;, &amp;quot;database.hostname&amp;quot;: &amp;quot;mysql&amp;quot;, &amp;quot;database.port&amp;quot;: &amp;quot;3306&amp;quot;, &amp;quot;database.user&amp;quot;: &amp;quot;debezium&amp;quot;, &amp;quot;database.password&amp;quot;: &amp;quot;dbz&amp;quot;, &amp;quot;database.server.id&amp;quot;: &amp;quot;184054&amp;quot;, &amp;quot;database.server.name&amp;quot;: &amp;quot;dbserver1&amp;quot;, &amp;quot;database.include.list&amp;quot;: &amp;quot;inventory&amp;quot;, &amp;quot;database.history.kafka.bootstrap.servers&amp;quot;: &amp;quot;kafka:9092&amp;quot;, &amp;quot;database.history.kafka.topic&amp;quot;: &amp;quot;schema-changes.inventory&amp;quot;, &amp;quot;table.include.list&amp;quot;: &amp;quot;inventory.customers&amp;quot;, &amp;quot;read.only&amp;quot;: &amp;quot;true&amp;quot;, &amp;quot;incremental.snapshot.allow.schema.changes&amp;quot;: &amp;quot;true&amp;quot;, &amp;quot;incremental.snapshot.chunk.size&amp;quot;: &amp;quot;5000&amp;quot;, &amp;quot;signal.kafka.topic&amp;quot;: &amp;quot;dbz-signals&amp;quot;, &amp;quot;signal.kafka.bootstrap.servers&amp;quot;: &amp;quot;kafka:9092&amp;quot; } } EOF&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;From the log we see that as per the &lt;code&gt;table.include.list&lt;/code&gt; setting only one table is snapshotted, &lt;code&gt;customers&lt;/code&gt;:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre&gt;tutorial-connect-1 | 2022-02-21 04:30:03,936 INFO MySQL|dbserver1|snapshot Snapshotting contents of 1 tables while still in transaction [io.debezium.relational.RelationalSnapshotChangeEventSource]&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In the next step we will simulate continuous activity in the database:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;# Terminal 3 # Continuously consume messages from Debezium topic for customers table docker-compose -f docker-compose-mysql.yaml exec kafka /kafka/bin/kafka-console-consumer.sh \ --bootstrap-server kafka:9092 \ --from-beginning \ --property print.key=true \ --topic dbserver1.inventory.customers # Terminal 4 # Modify records in the database via MySQL client docker-compose -f docker-compose-mysql.yaml exec mysql bash -c 'i=0; while true; do mysql -u $MYSQL_USER -p$MYSQL_PASSWORD inventory -e &amp;quot;INSERT INTO customers VALUES(default, \&amp;quot;name$i\&amp;quot;, \&amp;quot;surname$i\&amp;quot;, \&amp;quot;email$i\&amp;quot;);&amp;quot;; ((i++)); done'&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The topic &lt;code&gt;dbserver1.inventory.customers&lt;/code&gt; receives a continuous stream of messages. Now the connector will be reconfigured to also capture the &lt;code&gt;orders&lt;/code&gt; table:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre&gt;# Terminal 5 # Add orders table among the captured curl -i -X PUT -H &quot;Accept:application/json&quot; -H &quot;Content-Type:application/json&quot; http://localhost:8083/connectors/inventory-connector/config -d @- &amp;lt;&amp;lt;EOF { &quot;connector.class&quot;: &quot;io.debezium.connector.mysql.MySqlConnector&quot;, &quot;tasks.max&quot;: &quot;1&quot;, &quot;database.hostname&quot;: &quot;mysql&quot;, &quot;database.port&quot;: &quot;3306&quot;, &quot;database.user&quot;: &quot;debezium&quot;, &quot;database.password&quot;: &quot;dbz&quot;, &quot;database.server.id&quot;: &quot;184054&quot;, &quot;database.server.name&quot;: &quot;dbserver1&quot;, &quot;database.include.list&quot;: &quot;inventory&quot;, &quot;database.history.kafka.bootstrap.servers&quot;: &quot;kafka:9092&quot;, &quot;database.history.kafka.topic&quot;: &quot;schema-changes.inventory&quot;, &quot;table.include.list&quot;: &quot;inventory.customers,inventory.orders&quot;, &quot;read.only&quot;: &quot;true&quot;, &quot;incremental.snapshot.allow.schema.changes&quot;: &quot;true&quot;, &quot;incremental.snapshot.chunk.size&quot;: &quot;5000&quot;, &quot;signal.kafka.topic&quot;: &quot;dbz-signals&quot;, &quot;signal.kafka.bootstrap.servers&quot;: &quot;kafka:9092&quot; } EOF&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As expected, there are no messages for the &lt;code&gt;orders&lt;/code&gt; table:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;# Terminal 5 docker-compose -f docker-compose-mysql.yaml exec kafka /kafka/bin/kafka-console-consumer.sh \ --bootstrap-server kafka:9092 \ --from-beginning \ --property print.key=true \ --topic dbserver1.inventory.orders&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Now let&amp;#8217;s start an incremental ad-hoc snapshot by sending a signal. The snapshot messages for the &lt;code&gt;orders&lt;/code&gt; table are delivered to the &lt;code&gt;dbserver1.inventory.orders&lt;/code&gt; topic. Messages for the &lt;code&gt;customers&lt;/code&gt; table are delivered without interruption.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;# Terminal 5 # Send the signal docker-compose -f docker-compose-mysql.yaml exec kafka /kafka/bin/kafka-console-producer.sh \ --broker-list kafka:9092 \ --property &amp;quot;parse.key=true&amp;quot; \ --property &amp;quot;key.serializer=org.apache.kafka.common.serialization.StringSerializer&amp;quot; \ --property &amp;quot;value.serializer=custom.class.serialization.JsonSerializer&amp;quot; \ --property &amp;quot;key.separator=;&amp;quot; \ --topic dbz-signals dbserver1;{&amp;quot;type&amp;quot;:&amp;quot;execute-snapshot&amp;quot;,&amp;quot;data&amp;quot;: {&amp;quot;data-collections&amp;quot;: [&amp;quot;inventory.orders&amp;quot;], &amp;quot;type&amp;quot;: &amp;quot;INCREMENTAL&amp;quot;}} # Check messages for orders table docker-compose -f docker-compose-mysql.yaml exec kafka /kafka/bin/kafka-console-consumer.sh \ --bootstrap-server kafka:9092 \ --from-beginning \ --property print.key=true \ --topic dbserver1.inventory.orders&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;If you were to modify any record in the &lt;code&gt;orders&lt;/code&gt; table while the snapshot is running, this would be either emitted as a &lt;code&gt;read&lt;/code&gt; event or as an &lt;code&gt;update&lt;/code&gt; event, depending on the exact timing and sequence of things.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As the last step, let&amp;#8217;s terminate the deployed systems and close all terminals:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;# Shut down the cluster docker-compose -f docker-compose-mysql.yaml down&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium is an excellent change data capture tool under active development, and it&amp;#8217;s a pleasure to be a part of its community. We&amp;#8217;re excited to use incremental snapshots in production here at Shopify. If you have similar database usage restrictions, check out the read-only incremental snapshots feature. Many thanks to my team and the Debezium team without whom this project wouldn&amp;#8217;t happen.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</content><author><name>Kate Galieva</name></author><category term="mysql"/><category term="snapshots"/><summary type="html">The engineering team at Shopify recently improved the Debezium MySQL connector so that it supports incremental snapshotting for databases without write access by the connector, which is required when pointing Debezium to read-only replicas. In addition, the Debezium MySQL connector now also allows schema changes during an incremental snapshot. This blog post explains the implementation details of those features.</summary></entry><entry><title type="html">Debezium 1.9.0.Final Released</title><link href="https://debezium.io/blog/2022/04/06/debezium-1.9-final-released/" rel="alternate" type="text/html" title="Debezium 1.9.0.Final Released"/><published>2022-04-06T00:00:00+00:00</published><updated>2022-04-06T00:00:00+00:00</updated><id>https://debezium.io/blog/2022/04/06/debezium-1.9-final-released</id><content type="html" xml:base="https://debezium.io/blog/2022/04/06/debezium-1.9-final-released/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;I am very happy to share the news that Debezium &lt;strong&gt;1.9.0.Final&lt;/strong&gt; has been released!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Besides the usual set of bug fixes and improvements, key features of this release are support for Apache Cassandra 4, multi-database support for the Debezium connector for SQL Server, the ability to use Debezium Server as a Knative event source, as well as many improvements to the integration of Debezium Server with Redis Streams.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Exactly &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20in%20(1.9.0.Alpha1%2C%201.9.0.Alpha2%2C%201.9.0.Beta1%2C%201.9.0.CR1%2C%201.9.0.Final)%20ORDER%20BY%20key%20ASC%2C%20status%20DESC&quot;&gt;276 issues&lt;/a&gt; have been fixed by the community for the 1.9 release; a big thank you to each and everyone who helped to make this happen!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;support_for_apache_cassandra_4&quot;&gt;Support for Apache Cassandra 4&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Added right in time for the &lt;a href=&quot;/blog/2022/03/25/debezium-1-9-cr1-released/&quot;&gt;candidate release&lt;/a&gt; of Debezium 1.9, support for Cassandra 4 has been added to the &lt;a href=&quot;/documentation/reference/1.9/connectors/cassandra.html&quot;&gt;Debezium Cassandra connector&lt;/a&gt;. Or, more specifically, a &lt;em&gt;new&lt;/em&gt; connector has been added. I.e. you should now either download the &lt;em&gt;debezium-connector-cassandra-3&lt;/em&gt; or the &lt;em&gt;debezium-connector-cassandra-4&lt;/em&gt; connector archive, depending on your database version. While we usually strive for multi-version support within indvidual connectors, the code changes required to support the new version were that substantial, that we decided to have two separate code bases for the two connector versions (with commonalities extracted into a shared module).&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Both connectors, for Cassandra 3 and 4, remain in incubating state for the time being and you can expect further improvements to them within the near feature. A massive thank you to &lt;a href=&quot;https://github.com/smiklosovic&quot;&gt;Štefan Miklošovič&lt;/a&gt; and &lt;a href=&quot;https://github.com/ahmedjami&quot;&gt;Ahmed Eljami&lt;/a&gt; for this huge piece of work, which also paves the road towards moving to Java 11 as the baseline for Debezium in the near future.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;sql_server_multi_database_support&quot;&gt;SQL Server Multi-Database Support&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;SQL Server allows for setting up multiple logical databases on one physical host, which for instance comes in handy for separating the data of different tenants of a multi-tenant capable application. Historically, this required to set up one instance of the Debezium connector for SQL Server per logical database, which could become a bit cumbersome when dealing with tens or even hundreds of databases, as often the case for multi-tenancy use cases.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Over the last year, &lt;a href=&quot;/blog/2021/08/23/debezium-community-stories-with-sergei-morozov/&quot;&gt;Sergei Morozov&lt;/a&gt; and his team at SugarCRM reworked the &lt;a href=&quot;/documentation/reference/stable/connectors/sqlserver.html&quot;&gt;Debezium SQL Server connector&lt;/a&gt; and the Debezium connector framework to be &lt;em&gt;multi-partition aware&lt;/em&gt; for address sitations like this: the framework is now capable of streaming changes from multiple &lt;em&gt;source partitions&lt;/em&gt;, which are split up between &lt;em&gt;connector tasks&lt;/em&gt; (in Kafka Connect terminology), which in turn can be distributed amongst the worker nodes of a Kafka Connect cluster.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In case of the SQL Server connector, a logical database equates to one such source partition, so that you now can stream for instance 20 databases from one physical SQL Server host, spread across four source tasks running on five Kafka Connect worker nodes. To use the new multi-partition mode, configure the names of the databases to capture via the new &lt;a href=&quot;/documentation/reference/stable/connectors/sqlserver.html#sqlserver-property-database-names&quot;&gt;&lt;code&gt;database.names&lt;/code&gt;&lt;/a&gt; connector configuration property (rather than using the previously existing &lt;code&gt;database.dbname&lt;/code&gt;), and optionally set the value of &lt;code&gt;tasks.max&lt;/code&gt; to a value larger than 1. Note that the schema and topic names as well as the structure of connector metrics differs between single and multi-partition mode, so as to account for the name of the logical database and the id of the source task, respectively.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;exampleblock centered-image responsive-image&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;img src=&quot;/assets/images/multi_partition_metrics.png&quot; style=&quot;max-width:90%;&quot; class=&quot;responsive-image&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Multi-partition mode is experimental as of the 1.9 release and is planned to fully replace the legacy single partition mode for the SQL Server connector in a future release, i.e. also if you&amp;#8217;d capture changes from only one single logical database, you&amp;#8217;ll be using the multi-partition mode then. Multi-partition mode will also be rolled out for other connectors where it&amp;#8217;s possible, e.g. for the connectors for Oracle and IBM Db2.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Thanks a lot to Sergei and team for their excellent collaboration around that feature!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;further_changes&quot;&gt;Further Changes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Let&amp;#8217;s take a look at some more features new in Debezium 1.9. First, Debezium Server now includes a &lt;a href=&quot;/documentation/reference/1.9/operations/debezium-server.html#_http_client&quot;&gt;sink adaptor for HTTP&lt;/a&gt;, which means it can be used as a &quot;native&quot; event source for Knative Serving, without the need for sending messages through a message broker like Apache Kafka first.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Then, the friendly folks over at Redis stepped up and contributed several improvements to how Debezium (Server) integrates with &lt;a href=&quot;/documentation/reference/1.9/operations/debezium-server.html#_redis_stream&quot;&gt;Redis Streams&lt;/a&gt;: besides several performance improvements, the database history for connectors like the MySQL one can now be stored in Redis, also offsets can be stored there now. But they didn&amp;#8217;t stop there: for instance, Debezium Server now supports custom configuration providers, as already provided in Kafka Connect.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Going forward, the Redis team is planning to work on further cool improvements to Debezium at large, such as better retrying logic in case of failures. Looking forward to those!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;To learn more about all the features, improvements and bug fixes shipped in Debezium 1.9, please check out the original release announcements (&lt;a href=&quot;/blog/2022/01/26/debezium-1-9-alpha1-released/&quot;&gt;Alpha1&lt;/a&gt;, &lt;a href=&quot;/blog/2022/02/09/debezium-1-9-alpha2-released/&quot;&gt;Alpha2&lt;/a&gt;, &lt;a href=&quot;/blog/2022/03/03/debezium-1-9-beta1-released/&quot;&gt;Beta1&lt;/a&gt;, and &lt;a href=&quot;/blog/2022/03/25/debezium-1-9-cr1-released/&quot;&gt;CR1&lt;/a&gt;) as well as the &lt;a href=&quot;/releases/1.9/release-notes&quot;&gt;1.9 release notes&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Many thanks to all the folks from the Debezium community which contributed code changes to this release:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/samagonas&quot;&gt;Aidas&lt;/a&gt;, &lt;a href=&quot;https://github.com/isacandrei&quot;&gt;Andrei Isac&lt;/a&gt;, &lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Bob Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/cab105&quot;&gt;Chris Baumbauer&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/sormuras&quot;&gt;Christian Stein&lt;/a&gt;, &lt;a href=&quot;https://github.com/clement-loiselet-talend&quot;&gt;Clément Loiselet&lt;/a&gt;, &lt;a href=&quot;https://github.com/daha&quot;&gt;David Haglund&lt;/a&gt;, &lt;a href=&quot;https://github.com/chanetd&quot;&gt;Dominique Chanet&lt;/a&gt;, &lt;a href=&quot;https://github.com/EthanZ328&quot;&gt;Ethan Zou&lt;/a&gt;, &lt;a href=&quot;https://github.com/fuyar&quot;&gt;Farid Uyar&lt;/a&gt;, &lt;a href=&quot;https://github.com/gunnarmorling&quot;&gt;Gunnar Morling&lt;/a&gt;, &lt;a href=&quot;https://github.com/hjwalt&quot;&gt;Hady Willi&lt;/a&gt;, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/ismailsimsek&quot;&gt;Ismail Simsek&lt;/a&gt;, &lt;a href=&quot;https://github.com/sugarcrm-jgminder&quot;&gt;Jacob Gminder&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcechace&quot;&gt;Jakub Cechacek&lt;/a&gt;, &lt;a href=&quot;https://github.com/JapuDCret&quot;&gt;JapuDCret&lt;/a&gt;, &lt;a href=&quot;https://github.com/jmks&quot;&gt;Jason Schweier&lt;/a&gt;, &lt;a href=&quot;https://github.com/novotnyJiri&quot;&gt;Jiri Novotny&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/josetesan&quot;&gt;Jose Luis Sánchez&lt;/a&gt;, &lt;a href=&quot;https://github.com/jribera-sugarcrm&quot;&gt;Josh Ribera&lt;/a&gt;, &lt;a href=&quot;https://github.com/kgalieva&quot;&gt;Katerina Galieva&lt;/a&gt;, &lt;a href=&quot;https://github.com/limer2&quot;&gt;Li Mo&lt;/a&gt;, &lt;a href=&quot;https://github.com/sazzad16&quot;&gt;M Sazzadul Hoque&lt;/a&gt;, &lt;a href=&quot;https://github.com/mdrillin&quot;&gt;Mark Drilling&lt;/a&gt;, &lt;a href=&quot;https://github.com/MartinMedek&quot;&gt;Martin Medek&lt;/a&gt;, &lt;a href=&quot;https://github.com/mikekamornikov&quot;&gt;Mike Kamornikov&lt;/a&gt;, &lt;a href=&quot;https://github.com/wndemon&quot;&gt;Nansen&lt;/a&gt;, &lt;a href=&quot;https://github.com/nathan-smit-1&quot;&gt;Nathan Smit&lt;/a&gt;, &lt;a href=&quot;https://github.com/nenad&quot;&gt;Nenad Stojanovikj&lt;/a&gt;, &lt;a href=&quot;https://github.com/zalmane&quot;&gt;Oren Elias&lt;/a&gt;, &lt;a href=&quot;https://github.com/0sc&quot;&gt;Oscar Romero&lt;/a&gt;, &lt;a href=&quot;https://github.com/pmalon&quot;&gt;Paweł Malon&lt;/a&gt;, &lt;a href=&quot;https://github.com/poonam-meghnani&quot;&gt;Poonam Meghnani&lt;/a&gt;, &lt;a href=&quot;https://github.com/zhongqishang&quot;&gt;Qishang Zhong&lt;/a&gt;, &lt;a href=&quot;https://github.com/rk3rn3r&quot;&gt;René Kerner&lt;/a&gt;, &lt;a href=&quot;https://github.com/sarumont&quot;&gt;Richard Kolkovich&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Robert Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/Sebruck&quot;&gt;Sebastian Bruckner&lt;/a&gt;, &lt;a href=&quot;https://github.com/morozov&quot;&gt;Sergei Morozov&lt;/a&gt;, &lt;a href=&quot;https://github.com/shichao-an&quot;&gt;Shichao An&lt;/a&gt;, &lt;a href=&quot;https://github.com/snigdhasjg&quot;&gt;Snigdhajyoti Ghosh&lt;/a&gt;, &lt;a href=&quot;https://github.com/smiklosovic&quot;&gt;Stefan Miklosovic&lt;/a&gt;, &lt;a href=&quot;https://github.com/vjuranek&quot;&gt;Vojtěch Juránek&lt;/a&gt;, &lt;a href=&quot;https://github.com/zxpzlp&quot;&gt;Willie Zhu&lt;/a&gt;, &lt;a href=&quot;https://github.com/y5w&quot;&gt;Yang&lt;/a&gt;, &lt;a href=&quot;https://github.com/yingyingtang-brex&quot;&gt;Yingying Tang&lt;/a&gt;, &lt;a href=&quot;https://github.com/spicy-sauce&quot;&gt;Yossi Shirizli&lt;/a&gt;, and &lt;a href=&quot;https://github.com/AChangFeng&quot;&gt;胡琴&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;coming_up&quot;&gt;Coming Up&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;So what&amp;#8217;s next after 1.9? You may think 1.10, but that&amp;#8217;s not what we&amp;#8217;ll do; instead, we&amp;#8217;re planning to release Debezium 2.0 as a new major version later this year!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;While we don&amp;#8217;t strictly adhere to semantic versioning (i.e. a new minor release like 1.9 may require some small degree of consideration), one of our key objectives with Debezium releases is to limit breaking changes for existing users as much as possible. That&amp;#8217;s why for instance configuration options that became superfluous are not just removed but deprecated. The same applies for changes to the change event format, which are rolled out gradually. Over time, this has led to a number of legacy options and other aspects which we finally want to iron out. Debezium 2.0 will be the release where we will get rid of this kind of legacy cruft. For instance, we are planning to&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Remove the legacy implementations of the connectors for MySQL and MongoDB (superseded by more capable and mature implementations based on Debezium&amp;#8217;s standard connector framework, which have been enabled by default for quite some time)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Drop wal2json support for Postgres (superseded by pgoutput)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Use Java 11 as a baseline (for instance allowing to emit JDK Flight Recorder events for better diagnostics)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Default to multi-partition mode metrics (improved consistency)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Make default topic names more consistent, for instance for the heartbeat topic&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Change the default type mappings for a small number of column types&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Planning for this is in full swing right now, and you are very much invited to join the discussion either on the &lt;a href=&quot;https://groups.google.com/g/debezium/&quot;&gt;mailing list&lt;/a&gt; or on the &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-3899&quot;&gt;DBZ-3899&lt;/a&gt; issue in Jira. Note that while we want to take the opportunity to clean up some odditities which have accumulated over time, backwards compatibility will be key concern as always, and we&amp;#8217;ll try to minimize the impact on existing users. But as you would expect it from a new major release, upgrading may take a slightly larger effort in comparison to the usual minor releases.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In terms of a timeline, due to the size and number of planned changes, we&amp;#8217;re going to deviate from the usual quarterly release cadence and instead reserve two quarters for working on Debezium 2.0, i.e. you can look forward to that release at the end of September. In the meantime, there will be bugfix releases of the 1.9 version, as needed per incoming bug reports.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Upwards and onwards!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</content><author><name>Gunnar Morling</name></author><category term="releases"/><category term="mongodb"/><category term="mysql"/><category term="postgres"/><category term="sqlserver"/><category term="cassandra"/><category term="oracle"/><category term="db2"/><category term="vitess"/><category term="outbox"/><summary type="html">I am very happy to share the news that Debezium 1.9.0.Final has been released! Besides the usual set of bug fixes and improvements, key features of this release are support for Apache Cassandra 4, multi-database support for the Debezium connector for SQL Server, the ability to use Debezium Server as a Knative event source, as well as many improvements to the integration of Debezium Server with Redis Streams. Exactly 276 issues have been fixed by the community for the 1.9 release; a big thank you to each and everyone who helped to make this happen!</summary></entry><entry><title type="html">Debezium 1.9.0.CR1 Released</title><link href="https://debezium.io/blog/2022/03/25/debezium-1-9-cr1-released/" rel="alternate" type="text/html" title="Debezium 1.9.0.CR1 Released"/><published>2022-03-25T00:00:00+00:00</published><updated>2022-03-25T00:00:00+00:00</updated><id>https://debezium.io/blog/2022/03/25/debezium-1-9-cr1-released</id><content type="html" xml:base="https://debezium.io/blog/2022/03/25/debezium-1-9-cr1-released/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;I am happy to announce the release of Debezium &lt;strong&gt;1.9.0.CR1&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Besides a range of bugfixes, this release brings the long-awaited support for Apache Cassandra 4! Overall, &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%201.9.0.CR1%20ORDER%20BY%20component%20ASC&quot;&gt;52 issues&lt;/a&gt; have been fixed for this release.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Let&amp;#8217;s take a closer look at both the Cassandra 3 changes &amp;amp; Cassandra 4 support.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;cassandra_3_changes_cassandra_4_support&quot;&gt;Cassandra 3 changes &amp;amp; Cassandra 4 support&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;cassandra_3_breaking_changes&quot;&gt;Cassandra 3 breaking changes&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;For users who need to use Cassandra 3, the Maven coordinates of the (incubating) connector have changed slightly in this release. The main change for Cassandra 3 is that the artifact name has changed:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.debezium&lt;span class=&quot;tag&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;debezium-connector-cassandra-3&lt;span class=&quot;tag&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.9.0.CR1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;There is one additional user-facing change that this release introduces, which is a shift in the Cassandra driver. The connection configuration is no longer provided directly in the connector properties file but instead must be supplied using a separate &lt;code&gt;application.conf&lt;/code&gt; file. You can find a full reference on the driver&amp;#8217;s configuration &lt;a href=&quot;https://docs.datastax.com/en/developer/java-driver/4.2/manual/core/configuration/reference/&quot;&gt;here&lt;/a&gt; and below is an example:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code&gt;datastax-java-driver { basic { request.timeout = 20 seconds contact-points = [ &quot;spark-master-1:9042&quot; ] load-balancing-policy { local-datacenter = &quot;dc1&quot; } } advanced { auth-provider { class = PlainTextAuthProvider username = user password = pass } ssl-engine-factory { ... } } }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In order for the Debezium connector to read/use this new application configuration file, it must be set in the connector properties file as follows:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;properties&quot;&gt;cassandra.driver.config.file=/path/to/application/configuration.conf&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;cassandra_4_support&quot;&gt;Cassandra 4 support&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;For new users and those looking to upgrade to Cassandra 4, the Maven coordinates for the new connector artifact are:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.debezium&lt;span class=&quot;tag&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;debezium-connectr-cassandra-4&lt;span class=&quot;tag&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.9.0.CR1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We introduced a new artifact rather than a user configurable toggle as this allows both code bases to diverge as needed. This allows both the Cassandra 3 and 4 connectors to be refined as needed, as we move forward to building the Cassandra 4 connector with Java 11 as a baseline.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The Debezium for Cassandra 4 connector is based on Apache Cassandra 4.0.2. If you intend to upgrade to Cassandra 4, the migration should be relatively seamless from Debezium&amp;#8217;s perspective. Once the Cassandra environment has been upgraded, adjust the driver configuration as outlined in the above Cassandra 3 breaking changes section and restart the connector.hanges section and start the connector.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We would like to thank &lt;a href=&quot;https://github.com/smiklosovic&quot;&gt;Štefan Miklošovič&lt;/a&gt; and &lt;a href=&quot;https://github.com/ahmedjami&quot;&gt;Ahmed Eljami&lt;/a&gt; for this contribution!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;other_fixes_and_changes&quot;&gt;Other Fixes and Changes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Further fixes and improvements in the 1.9.0.CR1 release include:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Various DDL parser fixes for both MySQL (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4786&quot;&gt;DBZ-4786&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4833&quot;&gt;DBZ-4833&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4841&quot;&gt;DBZ-4841&lt;/a&gt;) and Oracle (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4810&quot;&gt;DBZ-4810&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4851&quot;&gt;DBZ-4851&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle connector gracefully handles unsupported column types (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4852&quot;&gt;DBZ-4852&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4853&quot;&gt;DBZ-4853&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4880&quot;&gt;DBZ-4880&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improve Oracle connector&amp;#8217;s supplemental log checks (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4842&quot;&gt;DBZ-4842&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4869&quot;&gt;DBZ-4869&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Various MySQL connector improvements (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4758&quot;&gt;DBZ-4758&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4787&quot;&gt;DBZ-4787&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Please refer to the &lt;a href=&quot;/releases/1.9/release-notes#release-1.9.0-cr1&quot;&gt;release notes&lt;/a&gt; to learn more about these and further fixes in this release.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As always, a big thank you to everyone contributing to this release:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Bob Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/clement-loiselet-talend&quot;&gt;Clément Loiselet&lt;/a&gt;, &lt;a href=&quot;https://github.com/EthanZ328&quot;&gt;Ethan Zou&lt;/a&gt;, &lt;a href=&quot;https://github.com/gunnarmorling&quot;&gt;Gunnar Morling&lt;/a&gt;, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcechace&quot;&gt;Jakub Cechacek&lt;/a&gt;, &lt;a href=&quot;https://github.com/novotnyJiri&quot;&gt;Jiri Novotny&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/josetesan&quot;&gt;Jose Luis Sánchez&lt;/a&gt;, &lt;a href=&quot;https://github.com/jribera-sugarcrm&quot;&gt;Josh Ribera&lt;/a&gt;, &lt;a href=&quot;https://github.com/kgalieva&quot;&gt;Katerina Galieva&lt;/a&gt;, &lt;a href=&quot;https://github.com/nathan-smit-1&quot;&gt;Nathan Smit&lt;/a&gt;, &lt;a href=&quot;https://github.com/zalmane&quot;&gt;Oren Elias&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Robert Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/morozov&quot;&gt;Sergei Morozov&lt;/a&gt;, &lt;a href=&quot;https://github.com/smiklosovic&quot;&gt;Stefan Miklosovic&lt;/a&gt;, &lt;a href=&quot;https://github.com/vjuranek&quot;&gt;Vojtěch Juránek&lt;/a&gt;, and &lt;a href=&quot;https://github.com/y5w&quot;&gt;Yang&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;outlook&quot;&gt;Outlook&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With CR1 done, you can expect 1.9 Final either later this week or early next week depending on issue reports.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As we begin to look ahead, you can expect work on Debezium 2.0 to begin in the near future. The current roadmap is to devote the next two release cycles on Debezium 2.0, releasing it sometime near the end of September 2022. In the meantime, expect regular updates to continue for Debezium 1.9 throughout this process.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</content><author><name>Chris Cranford</name></author><category term="releases"/><category term="mysql"/><category term="postgres"/><category term="sqlserver"/><category term="cassandra"/><category term="oracle"/><category term="db2"/><category term="vitess"/><category term="outbox"/><summary type="html">I am happy to announce the release of Debezium 1.9.0.CR1! Besides a range of bugfixes, this release brings the long-awaited support for Apache Cassandra 4! Overall, 52 issues have been fixed for this release. Let&amp;#8217;s take a closer look at both the Cassandra 3 changes &amp;amp; Cassandra 4 support.</summary></entry><entry><title type="html">Hello Debezium Team!</title><link href="https://debezium.io/blog/2022/03/15/hello-debezium/" rel="alternate" type="text/html" title="Hello Debezium Team!"/><published>2022-03-15T09:19:59+00:00</published><updated>2022-03-15T09:19:59+00:00</updated><id>https://debezium.io/blog/2022/03/15/hello-debezium</id><content type="html" xml:base="https://debezium.io/blog/2022/03/15/hello-debezium/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Hi everyone, my name is Vojtěch Juránek and I recently joined the Debezium team.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Most of my professional IT career I&amp;#8217;ve spent at Red Hat. I have a background in particle physics, but I did quite a lot programming even before joining Red Hat, when working on &lt;a href=&quot;https://herwig.hepforge.org/&quot;&gt;simulations of high-energy particle collisions&lt;/a&gt; and their &lt;a href=&quot;https://root.cern/&quot;&gt;data analysis&lt;/a&gt;. The science is by default open and all software I was using was open source as well. Here started my love for open source.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;When I decided to do programming for a living, Red Had was a natural choice for me, as by that time it was one of the few companies which promoted open source heavily. I started to work at Red Hat as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Hudson_(software)&quot;&gt;Hudson&lt;/a&gt; developer. I developed and maintained many plugins and also contributed to Hudson core. I focused mainly on Hudson stability and memory footprint as I also took care about internal JBoss Hudson instance, which was the world&amp;#8217;s largest Hudson deployment by that time. When Hudson was forked to &lt;a href=&quot;https://www.jenkins.io/&quot;&gt;Jenkins&lt;/a&gt;, I co-created and a maintained Jenkins LTS (long term support) branch. I was also a member of Jenkins CERT team.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;After a couple of years spent with Hudson/Jenkins, I decided it&amp;#8217;s time to move on and joined &lt;a href=&quot;https://infinispan.org/&quot;&gt;Infinispan&lt;/a&gt; team as a quality engineer. Knowing only a little about things like memory data grid when I joined the team, I quickly discovered the beautiful world of distributed systems and fell in love with it. As a quality engineer on the Infinispan project I not only dug deep in distributed databases and consensus algorithms, but also became familiar with other very interesting projects like e.g. &lt;a href=&quot;https://jepsen.io/&quot;&gt;Jepsen&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Later on, I accepted the challenge to discover another interesting world - the world of virtual machines and data centers and started to work as a developer on &lt;a href=&quot;https://www.ovirt.org/&quot;&gt;oVirt project&lt;/a&gt; project in the storage team. I was mostly working on low level stuff, on projects &lt;a href=&quot;https://github.com/ovirt/vdsm&quot;&gt;vdsm&lt;/a&gt; and &lt;a href=&quot;https://github.com/oVirt/ovirt-imageio/&quot;&gt;imageio&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Working on oVirt was interesting, but I was really excited when I got an opportunity to move back to databases and distributed systems and join the Debezium project. I&amp;#8217;m looking forward to work on this wonderful project!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Onwards,&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;--Vojta&lt;/p&gt; &lt;/div&gt;</content><author><name>Vojtěch Juránek</name></author><category term="community"/><category term="news"/><summary type="html">Hi everyone, my name is Vojtěch Juránek and I recently joined the Debezium team. Most of my professional IT career I&amp;#8217;ve spent at Red Hat. I have a background in particle physics, but I did quite a lot programming even before joining Red Hat, when working on simulations of high-energy particle collisions and their data analysis. The science is by default open and all software I was using was open source as well. Here started my love for open source.</summary></entry><entry><title type="html">Debezium 1.9.0.Beta1 Released</title><link href="https://debezium.io/blog/2022/03/03/debezium-1-9-beta1-released/" rel="alternate" type="text/html" title="Debezium 1.9.0.Beta1 Released"/><published>2022-03-03T00:00:00+00:00</published><updated>2022-03-03T00:00:00+00:00</updated><id>https://debezium.io/blog/2022/03/03/debezium-1-9-beta1-released</id><content type="html" xml:base="https://debezium.io/blog/2022/03/03/debezium-1-9-beta1-released/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;I am happy to announce the release of Debezium &lt;strong&gt;1.9.0.Beta1&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release includes many new features for Debezium Server, including Knative Eventing support and offset storage management with the Redis sink, multi-partitioned scaling for the SQL Server connector, and various of bugfixes and improvements. Overall, &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%201.9.0.Beta1%20ORDER%20BY%20component%20ASC&quot;&gt;56 issues&lt;/a&gt; have been fixed for this release.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Let&amp;#8217;s take a closer look at a couple of them.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;debezium_server_knative_eventing&quot;&gt;Debezium Server Knative Eventing&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium Server has grown quite a lot since its introduction to the Debezium portfolio in version 1.2. In this release, we have added a new sink implementation to support &lt;a href=&quot;https://knative.dev/docs/eventing/&quot;&gt;Knative Eventing&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Knative Eventing &quot;provides tools and infrastructure to route events from a producer to consumers&quot;, in a very similar way in which Apache Kafka allows the exchange of events via message topics. With Debezium Server, you can now leverage the new &lt;a href=&quot;https://github.com/debezium/debezium/tree/main/debezium-server/debezium-server-http&quot;&gt;debezium-server-http&lt;/a&gt; sink to deliver Debezium change data events to a Knative Broker, a Kubernetes resource that defines a mesh for collecting and distributing &lt;a href=&quot;https://cloudevents.io/&quot;&gt;CloudEvents&lt;/a&gt; to consumers. In other words, Debezium Server can act as a &quot;native&quot; Knative event source.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In order to get started with Debezium and Knative Eventing, you simply need to configure the Debezium Server with your desired source connector and then configure the sink side with the following:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;properties&quot;&gt;debezium.sink.type=http debezium.format.value=cloudevents&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The sink will attempt to automatically detect the endpoint based on the &lt;code&gt;K_SINK&lt;/code&gt; environment variable. If no value is defined by this variable, you can explicitly provide the end-point URL directly using:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;properties&quot;&gt;debezium.sink.http.url=https://&amp;lt;hostname&amp;gt;/&amp;lt;end-point&amp;gt;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We&amp;#8217;re super excited about this new sink connector and we look forward to all your feedback. A big thank you to &lt;a href=&quot;https://github.com/cab105&quot;&gt;Chris Baumbauer&lt;/a&gt; for this excellent contribution!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;redis_managed_offsets_for_debezium_server&quot;&gt;Redis-managed Offsets for Debezium Server&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Several folks from &lt;a href=&quot;https://redis.com/&quot;&gt;Redis&lt;/a&gt; stepped up lately for improving the story around integrating Debezium and &lt;a href=&quot;https://redis.io/topics/streams-intro&quot;&gt;Redis Streams&lt;/a&gt;. After the performance improvements done in 1.9.0.Alpha1 (by means of batching), another result of that work is the ability to &lt;a href=&quot;/documentation/reference/1.9/operations/debezium-server.html#debezium-source-offset-storage&quot;&gt;store connector offsets&lt;/a&gt; in Redis. For the next 1.9 early access release you can expect a database history implementation backed by Redis, and the team also is working on implementing retry support for Debezium Server. Thanks a lot to &lt;a href=&quot;https://github.com/spicy-sauce&quot;&gt;Yossi Shirizli&lt;/a&gt;, &lt;a href=&quot;https://github.com/zalmane&quot;&gt;Oren Elias&lt;/a&gt; and all the other Redis folks contributing not only to the Redis Streams sink, but also to Debezium and Debezium Server at large!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;multi_partitioned_scaling_for_sql_server_connector&quot;&gt;Multi-partitioned Scaling for SQL Server Connector&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Some database platforms, such as SQL Server and Oracle, support the creation and management of multiple logical databases within a single physical database server instance. Traditionally, streaming changes from the multiple logical databases required a separate connector deployment. Now there isn&amp;#8217;t anything innately wrong with such a deployment strategy, but it can quickly start to show its shortcomings if you have many logical databases; for instance in case of multi-tenancy scenarios with one logical database per tenant, the overhead of setting up and operating one connector per database can become a bottleneck. Besides that, processing change events from multiple logical databases lends itself perfectly well to parallelization by means of Kafka Connect&amp;#8217;s concept of tasks.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Over the last several 1.x releases, a tremendous amount of work has gone into key fundamental changes to Debezium&amp;#8217;s common connector framework, setting the stage for a new horizontal scaling strategy.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;One of the initial goals of this new strategy is to eliminate the need for multiple connector deployments when streaming changes from multiple logical databases within a single SQL Server instance. Additionally, it was critical to expose metrics in a way that enables monitoring tools to report on the state and health of the connector both from a connector-centric perspective but also from each logical database being processed. In this release, we&amp;#8217;ve achieved those goals.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;exampleblock centered-image responsive-image&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;img src=&quot;/assets/images/multi_partition_metrics.png&quot; style=&quot;max-width:90%;&quot; class=&quot;responsive-image&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;But this is just the beginning folks!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This foundation prepares the groundwork where we can move toward new horizontal scaling strategies. Debezium uses a single-task based architecture and this opens the possibilities to really harness the power of a multi-node Kafka Connect cluster and distribute chunks of work across multiple tasks. Furthermore, this can be extended to other connectors such as Oracle.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This work has been led by the team around &lt;a href=&quot;/blog/2021/08/23/debezium-community-stories-with-sergei-morozov/&quot;&gt;Sergei Morozov&lt;/a&gt; of SugarCRM, who already deploy the SQL Server connector in multi-partition mode built from an internal fork, which they internally maintain until the entire work has been upstreamed. We&amp;#8217;d like to say a huge, huge thank you to Sergei, Jacob Gminder, Mike Kamornikov, and everyone else from SugarCRM who worked tirelessly to make this possible for the Debezium community, and we&amp;#8217;re looking forward very much to continuing and further expanding this close collaboration.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;other_fixes_and_changes&quot;&gt;Other Fixes and Changes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Further fixes and improvements in the 1.9.0.Beta1 release include:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Various DDL parser fixes for both MySQL (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4707&quot;&gt;DBZ-4707&lt;/a&gt;) and Oracle (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4641&quot;&gt;DBZ-4641&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4662&quot;&gt;DBZ-4662&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4706&quot;&gt;DBZ-4706&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4746&quot;&gt;DBZ-4746&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4746&quot;&gt;DBZ-4752&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4763&quot;&gt;DBZ-4763&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Corrected a long-running transaction issue with the PostgreSQL connector (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-2306&quot;&gt;DBZ-2306&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle connector stability improvements (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4635&quot;&gt;DBZ-4635&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4715&quot;&gt;DBZ-4715&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4723&quot;&gt;DBZ-4723&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4737&quot;&gt;DBZ-4737&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4744&quot;&gt;DBZ-4744&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Please refer to the &lt;a href=&quot;/releases/1.9/release-notes#release-1.9.0-beta1&quot;&gt;release notes&lt;/a&gt; to learn more about these and further fixes in this release.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As always, a big thank you to everyone contributing to this release:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/samagonas&quot;&gt;Aidas&lt;/a&gt;, &lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Bob Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/cab105&quot;&gt;Chris Baumbauer&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/chanetd&quot;&gt;Dominique Chanet&lt;/a&gt;, &lt;a href=&quot;https://github.com/gunnarmorling&quot;&gt;Gunnar Morling&lt;/a&gt;, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/sugarcrm-jgminder&quot;&gt;Jacob Gminder&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcechace&quot;&gt;Jakub Cechacek&lt;/a&gt;, &lt;a href=&quot;https://github.com/novotnyJiri&quot;&gt;Jiri Novotny&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/jribera-sugarcrm&quot;&gt;Josh Ribera&lt;/a&gt;, &lt;a href=&quot;https://github.com/limer2&quot;&gt;Li Mo&lt;/a&gt;, &lt;a href=&quot;https://github.com/MartinMedek&quot;&gt;Martin Medek&lt;/a&gt;, &lt;a href=&quot;https://github.com/mikekamornikov&quot;&gt;Mike Kamornikov&lt;/a&gt;, &lt;a href=&quot;https://github.com/sazzad16&quot;&gt;M Sazzadul Hoque&lt;/a&gt;, &lt;a href=&quot;https://github.com/zalmane&quot;&gt;Oren Elias&lt;/a&gt;, &lt;a href=&quot;https://github.com/rk3rn3r&quot;&gt;René Kerner&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Robert Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/morozov&quot;&gt;Sergei Morozov&lt;/a&gt;, &lt;a href=&quot;https://github.com/snigdhasjg&quot;&gt;Snigdhajyoti Ghosh&lt;/a&gt;, &lt;a href=&quot;https://github.com/vjuranek&quot;&gt;Vojtech Juranek&lt;/a&gt;, &lt;a href=&quot;https://github.com/zxpzlp&quot;&gt;Willie Zhu&lt;/a&gt;, &lt;a href=&quot;https://github.com/y5w&quot;&gt;Yang&lt;/a&gt;, &lt;a href=&quot;https://github.com/yingyingtang-brex&quot;&gt;Yingying Tang&lt;/a&gt;, and &lt;a href=&quot;https://github.com/spicy-sauce&quot;&gt;Yossi Shirizli&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;outlook&quot;&gt;Outlook&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With the Beta1 release done, we are approaching the final phase of the 1.9 release cycle. Depending on the incoming issue reports, you can expect a new release in the next few weeks to likely be CR1.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As we turn and look ahead beyond 1.9, you can expect work on Debezium 2.0 to begin in early April 2022. The current roadmap is to devote 2 full release cycles, which means you can expect Debezium 2.0 sometime near the end of September 2022. In the meantime, you can expect regular updates to Debezium 1.9 throughout this process.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;If you are interested in Debezium 2.0, we have collected a number of items in &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-3899&quot;&gt;DBZ-3899&lt;/a&gt; thus far. This is not an exhaustive list nor has this list been prioritized and scoped to what you can expect in totality of 2.0; however, it is what we&amp;#8217;ve identified to be things that either the community or the team feel are actionable tasks for this new major release. If there is something you would like to see, please take a moment and either raise a discussion on the above Jira ticket or join the discussion on &lt;a href=&quot;https://groups.google.com/u/1/g/debezium/c/X17AUmQ88-E&quot;&gt;this topic&lt;/a&gt; on our mailing list.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</content><author><name>Chris Cranford</name></author><category term="releases"/><category term="mysql"/><category term="postgres"/><category term="sqlserver"/><category term="cassandra"/><category term="oracle"/><category term="db2"/><category term="vitess"/><category term="outbox"/><summary type="html">I am happy to announce the release of Debezium 1.9.0.Beta1! This release includes many new features for Debezium Server, including Knative Eventing support and offset storage management with the Redis sink, multi-partitioned scaling for the SQL Server connector, and various of bugfixes and improvements. Overall, 56 issues have been fixed for this release. Let&amp;#8217;s take a closer look at a couple of them.</summary></entry><entry><title type="html">Debezium 1.9.0.Alpha2 Released</title><link href="https://debezium.io/blog/2022/02/09/debezium-1-9-alpha2-released/" rel="alternate" type="text/html" title="Debezium 1.9.0.Alpha2 Released"/><published>2022-02-09T00:00:00+00:00</published><updated>2022-02-09T00:00:00+00:00</updated><id>https://debezium.io/blog/2022/02/09/debezium-1-9-alpha2-released</id><content type="html" xml:base="https://debezium.io/blog/2022/02/09/debezium-1-9-alpha2-released/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It&amp;#8217;s my pleasure to announce the second release of the Debezium 1.9 series, &lt;strong&gt;1.9.0.Alpha2&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release includes support for Oracle 21c, improvements around Redis for Debezium Server, configuring the &lt;code&gt;kafka.query.timeout.ms&lt;/code&gt; option, and a number of bug fixes around DDL parsers, build infrastructure, etc.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Overall, the community fixed &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%201.9.0.Alpha2%20ORDER%20BY%20issuetype%20DESC&quot;&gt;51 issues&lt;/a&gt; for this release. Let’s take a closer look at some of the highlights.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;support_for_oracle_21c&quot;&gt;Support for Oracle 21c&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The Debezium Oracle connector has been tested with the latest release of Oracle 21c, 21.3.0.0, and is compatible. If you use either the LogMiner or the Xstreams adapter, you should now be able to use Oracle&amp;#8217;s latest flagship version and stream change events without any changes. If you are on Oracle 12 or Oracle 19 and perform a database upgrade, your connector configuration should require no changes and remain compatible.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;configuring_kafka_query_timeout_ms&quot;&gt;Configuring &lt;code&gt;kafka.query.timeout.ms&lt;/code&gt;&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;When using the Kafka Admin Client and issuing API calls, the default timeout is 3 seconds. The new &lt;code&gt;kafka.query.timeout.ms&lt;/code&gt; field can be used to provide a custom timeout to the Kafka Admin Client to avoid possible timeout problems in environments that may use TLS or SSL encryption or where network latency causes an unexpected timeout.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Thanks to the great work done by community member, &lt;a href=&quot;https://github.com/snigdhasjg&quot;&gt;Snigdhajyoti Ghosh&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;improvements_in_redis_for_debezium_server&quot;&gt;Improvements in Redis for Debezium Server&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We have three new fields in the Redis support for Debezium Server&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;redis.retry.initial.delay.ms&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;redis.retry.max.delay.ms&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;batch.size&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Redis allows specifying a maximum memory limit using the &lt;code&gt;maxmemory&lt;/code&gt; configuration; however, if this field is not configured then Redis will continue to allocate memory. If all memory is consumed, an OutOfMemory exception occurs. The Redis sink now uses &lt;code&gt;redis.retry.initial.delay.ms&lt;/code&gt; and &lt;code&gt;redis.retry.max.delay.ms&lt;/code&gt; to set an initial and max-retry delay to be more resilient to this and connection-related issues. If you have or are experiencing such exceptions, we urge you to try these new settings to improve the sink&amp;#8217;s resilience and experience.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Pipeline-based transactions can substantially increase Redis queries. In order to leverage pipeline-based transactions, the &lt;code&gt;batch.size&lt;/code&gt; configuration option can be specified which will allow Redis to write batches of change records rather than each record one by one.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/spicy-sauc&quot;&gt;Yossi Shirizli&lt;/a&gt;, for these amazing improvements.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;other_fixes&quot;&gt;Other fixes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Some notable bug fixes and upgrades are:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Suspected inconsistent documentation for 'Ad-hoc read-only Incremental snapshot' &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4171&quot;&gt;DBZ-4171&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle Logminer: snapshot&amp;#8594;stream switch misses DB changes in ongoing transactions &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4367&quot;&gt;DBZ-4367&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;DDL parsing issue: ALTER TABLE &amp;#8230;&amp;#8203; MODIFY PARTITION &amp;#8230;&amp;#8203; &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4649&quot;&gt;DBZ-4649&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;OracleSchemaMigrationIT fails with Xstream adapter &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4703&quot;&gt;DBZ-4703&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Migrating UI from webpack-dev-server v3 to v4 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4642&quot;&gt;DBZ-4642&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade postgres driver to version 42.3.2 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4658&quot;&gt;DBZ-4658&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade to Quarkus 2.7.0.Final &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4677&quot;&gt;DBZ-4677&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Update shared UG deployment file for use with downstream OCP Install Guide &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4700&quot;&gt;DBZ-4700&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Indicate ROWID is not supported by XStream &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4702&quot;&gt;DBZ-4702&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Incremental snapshots does not honor column case sensitivity &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4584&quot;&gt;DBZ-4584&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Build trigger issues &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4672&quot;&gt;DBZ-4672&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cannot expand JSON payload with nested arrays of objects &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4704&quot;&gt;DBZ-4704&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We will also be backporting the critical bugfixes to the 1.8 branch and will release Debezium 1.8.1.Final later this week.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;A big thank you to all the contributors from the community who worked on this release: &lt;a href=&quot;https://github.com/isacandrei&quot;&gt;Andrei Isac&lt;/a&gt;, &lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Bob Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/daha&quot;&gt;David Haglund&lt;/a&gt;, &lt;a href=&quot;https://github.com/chanetd&quot;&gt;Dominique Chanet&lt;/a&gt;, &lt;a href=&quot;https://github.com/fuyar&quot;&gt;Farid Uyar&lt;/a&gt;, &lt;a href=&quot;https://github.com/gunnarmorling&quot;&gt;Gunnar Morling&lt;/a&gt;, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/ismailsimsek&quot;&gt;Ismail Simsek&lt;/a&gt;, &lt;a href=&quot;https://github.com/jmks&quot;&gt;Jason Schweier&lt;/a&gt;, &lt;a href=&quot;https://github.com/novotnyJiri&quot;&gt;Jiri Novotny&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/mdrillin&quot;&gt;Mark Drilling&lt;/a&gt;, &lt;a href=&quot;https://github.com/nathan-smit-1&quot;&gt;Nathan Smit&lt;/a&gt;, &lt;a href=&quot;https://github.com/pmalon&quot;&gt;Paweł Malon&lt;/a&gt;, &lt;a href=&quot;https://github.com/rk3rn3r&quot;&gt;René Kerner&lt;/a&gt;, &lt;a href=&quot;https://github.com/shichao-an&quot;&gt;Shichao An&lt;/a&gt;, &lt;a href=&quot;https://github.com/snigdhasjg&quot;&gt;Snigdhajyoti Ghosh&lt;/a&gt;, &lt;a href=&quot;https://github.com/vjuranek&quot;&gt;Vojtech Juranek&lt;/a&gt;, and &lt;a href=&quot;https://github.com/spicy-sauce&quot;&gt;Yossi Shirizli&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</content><author><name>Anisha Mohanty</name></author><category term="releases"/><category term="mysql"/><category term="postgres"/><category term="sqlserver"/><category term="cassandra"/><category term="oracle"/><category term="db2"/><category term="vitess"/><category term="outbox"/><summary type="html">It&amp;#8217;s my pleasure to announce the second release of the Debezium 1.9 series, 1.9.0.Alpha2! This release includes support for Oracle 21c, improvements around Redis for Debezium Server, configuring the kafka.query.timeout.ms option, and a number of bug fixes around DDL parsers, build infrastructure, etc. Overall, the community fixed 51 issues for this release. Let’s take a closer look at some of the highlights.</summary></entry><entry><title type="html">Debezium 1.9.0.Alpha1 Released</title><link href="https://debezium.io/blog/2022/01/26/debezium-1-9-alpha1-released/" rel="alternate" type="text/html" title="Debezium 1.9.0.Alpha1 Released"/><published>2022-01-26T00:00:00+00:00</published><updated>2022-01-26T00:00:00+00:00</updated><id>https://debezium.io/blog/2022/01/26/debezium-1-9-alpha1-released</id><content type="html" xml:base="https://debezium.io/blog/2022/01/26/debezium-1-9-alpha1-released/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It&amp;#8217;s my pleasure to announce the first release of the Debezium 1.9 series, &lt;strong&gt;1.9.0.Alpha1&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With the new year comes a new release! The Debezium 1.9.0.Alpha1 release comes with quite a number of fixes and improvements, most notably improved metrics and Oracle ROWID data type support.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;improved_metrics&quot;&gt;Improved Metrics&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium&amp;#8217;s connectors provide a wide range of metrics. We have expanded upon the &lt;code&gt;TotalNumberOfEventsSeen&lt;/code&gt; metric to provide a breakdown of those events by type. To support this endeavor, the following new metrics have been added:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;TotalNumberOfCreateEventsSeen&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;TotalNumberOfUpdateEventsSeen&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;TotalNumberOfDeleteEventsSeen&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;These metrics represent the number of &lt;em&gt;insert&lt;/em&gt;, &lt;em&gt;update&lt;/em&gt;, and &lt;em&gt;delete&lt;/em&gt; events respectively that have occurred since the start of the connector&amp;#8217;s streaming phase. So not only can you continue to get the total number of events aggregate, but you can now get a breakdown of that total by event type.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;oracle_rowid_data_type_support&quot;&gt;Oracle ROWID data type support&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Oracle users may elect to use a &lt;code&gt;ROWID&lt;/code&gt; data type column as an optimization to represent a relationship between the current row and the row identified by the &lt;code&gt;ROWID&lt;/code&gt; column value. Starting with this release, columns using the &lt;code&gt;ROWID&lt;/code&gt; data type can be captured by Debezium and emitted in change events.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;admonitionblock note&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;td class=&quot;icon&quot;&gt; &lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class=&quot;content&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Oracle has two flavors of row identifier column data types, &lt;code&gt;ROWID&lt;/code&gt; and &lt;code&gt;UROWID&lt;/code&gt;. While these may be used interchangeably in some contexts, they&amp;#8217;re very different in the context of change data capture events. Although we&amp;#8217;ve added support for &lt;code&gt;ROWID&lt;/code&gt;, support for &lt;code&gt;UROWID&lt;/code&gt; remains unsupported at this time.&lt;/p&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;other_fixes&quot;&gt;Other Fixes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;There were quite a number of bugfixes and stability changes in this release, some noteworthy are:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;JSON Payload not expanding when enabling it (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4457&quot;&gt;DBZ-4457&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;R/O incremental snapshot can blocks the binlog stream on restart (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4502&quot;&gt;DBZ-4502&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Infinispan doesn&amp;#8217;t work with underscores inside cache names (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4526&quot;&gt;DBZ-4526&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Can&amp;#8217;t process column definition with length exceeding Integer.MAX_VALUE (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4583&quot;&gt;DBZ-4583&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle connector can&amp;#8217;t find the SCN (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4597&quot;&gt;DBZ-4597&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Update Postgres JDBC driver to 42.3.1 (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4374&quot;&gt;DBZ-4374&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade SQL Server driver to 9.4 (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4463&quot;&gt;DBZ-4463&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Altogether, &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%201.9.0.Alpha1%20ORDER%20BY%20component%20ASC&quot;&gt;100 issues&lt;/a&gt; were fixed for this release. A big thank you to all the contributors from the community who worked on this release:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Bob Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/chanetd&quot;&gt;Dominique Chanet&lt;/a&gt;, &lt;a href=&quot;https://github.com/gunnarmorling&quot;&gt;Gunnar Morling&lt;/a&gt;, &lt;a href=&quot;https://github.com/hjwalt&quot;&gt;Hady Willi&lt;/a&gt;, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcechace&quot;&gt;Jakub Cechacek&lt;/a&gt;, &lt;a href=&quot;https://github.com/JapuDCret&quot;&gt;JapuDCret&lt;/a&gt;, &lt;a href=&quot;https://github.com/novotnyJiri&quot;&gt;Jiri Novotny&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/kgalieva&quot;&gt;Katerina Galieva&lt;/a&gt;, &lt;a href=&quot;https://github.com/wndemon&quot;&gt;Nansen&lt;/a&gt;, &lt;a href=&quot;https://github.com/nathan-smit-1&quot;&gt;Nathan Smit&lt;/a&gt;, &lt;a href=&quot;https://github.com/0sc&quot;&gt;Oscar Romero&lt;/a&gt;, &lt;a href=&quot;https://github.com/poonam-meghnani&quot;&gt;Poonam Meghnani&lt;/a&gt;, &lt;a href=&quot;https://github.com/zhongqishang&quot;&gt;Qishang Zhong&lt;/a&gt;, &lt;a href=&quot;https://github.com/sarumont&quot;&gt;Richard Kolkovich&lt;/a&gt;, &lt;a href=&quot;https://github.com/Sebruck&quot;&gt;Sebastian Bruckner&lt;/a&gt;, &lt;a href=&quot;https://github.com/morozov&quot;&gt;Sergei Morozov&lt;/a&gt;, &lt;a href=&quot;https://github.com/shichao-an&quot;&gt;Shichao An&lt;/a&gt;, and &lt;a href=&quot;https://github.com/AChangFeng&quot;&gt;胡琴&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;whats_next&quot;&gt;What&amp;#8217;s Next?&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We have started an &lt;a href=&quot;https://groups.google.com/u/1/g/debezium/c/X17AUmQ88-E&quot;&gt;open discussion&lt;/a&gt; regarding Debezium 2.0 on the mailing list. Your feedback is invaluable so let us know what you&amp;#8217;d like to see added, changed, or improved!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In the meantime, we&amp;#8217;re just getting started! There will be another 1.9 pre-release in the coming weeks, sticking with our 3-week cadence. You can also expect a bugfix release sometime this quarter for 1.8 as we continue to get community feedback.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</content><author><name>Chris Cranford</name></author><category term="releases"/><category term="mysql"/><category term="postgres"/><category term="sqlserver"/><category term="cassandra"/><category term="oracle"/><category term="db2"/><category term="vitess"/><category term="outbox"/><summary type="html">It&amp;#8217;s my pleasure to announce the first release of the Debezium 1.9 series, 1.9.0.Alpha1! With the new year comes a new release! The Debezium 1.9.0.Alpha1 release comes with quite a number of fixes and improvements, most notably improved metrics and Oracle ROWID data type support.</summary></entry><entry><title type="html">Debezium 1.8.0.Final Released</title><link href="https://debezium.io/blog/2021/12/16/debezium-1.8-final-released/" rel="alternate" type="text/html" title="Debezium 1.8.0.Final Released"/><published>2021-12-16T00:00:00+00:00</published><updated>2021-12-16T00:00:00+00:00</updated><id>https://debezium.io/blog/2021/12/16/debezium-1.8-final-released</id><content type="html" xml:base="https://debezium.io/blog/2021/12/16/debezium-1.8-final-released/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It&amp;#8217;s my great pleasure to announce the release of Debezium &lt;strong&gt;1.8.0.Final&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Besides a strong focus on the Debezium connector for MongoDB (more on that below), the 1.8 release brings support for Postgres' logical decoding messages, support for configuring SMTs and topic creation settings in the Debezium UI, and much more.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Overall, the community has fixed &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4460?jql=project%20%3D%20DBZ%20AND%20fixVersion%20in%20(1.8.0.Alpha1%2C%201.8.0.Alpha2%2C%201.8.0.Beta1%2C%201.8.0.CR1%2C%201.8.0.Final)&quot;&gt;242 issues&lt;/a&gt; for this release. A big thank you to everyone who helped to make this release happen on time, sticking to our quarterly release cadence!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;improvements_to_the_debezium_connector_for_mongodb&quot;&gt;Improvements to the Debezium Connector for MongoDB&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The team has made a strong push to bring multiple new features and improvements to the &lt;a href=&quot;https://debezium.io/documentation/reference/stable/connectors/mongodb.html&quot;&gt;connector for MongoDB&lt;/a&gt;. It has now a brand-new capturing implementation based on MongoDB &lt;a href=&quot;https://docs.mongodb.com/manual/changeStreams/&quot;&gt;Change Streams&lt;/a&gt;, which allows for some very exciting new functionalities. More specifically, the connector now&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Supports and has been tested with all the latest versions up to 5.0&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Can optionally &lt;a href=&quot;https://debezium.io/documentation/reference/stable/connectors/mongodb.html#mongodb-property-capture-mode&quot;&gt;emit the complete document state&lt;/a&gt; for update events (by means of the Change Streams capability of reading back the entire document affected by change)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Provides support for &lt;a href=&quot;https://debezium.io/documentation/reference/stable/connectors/mongodb.html#_incremental_snapshot&quot;&gt;incremental snapshots&lt;/a&gt;, as already known from the other Debezium connectors (more details on that in a separate blog post)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Helps you to implement the outbox pattern for microservices data exchange by means of an &lt;a href=&quot;https://debezium.io/documentation/reference/stable/transformations/mongodb-outbox-event-router.html&quot;&gt;event routing SMT&lt;/a&gt;, specifically tailored to the event format emitted by this connector&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;further_improvements&quot;&gt;Further Improvements&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Besides the work on the MongoDB connector, many improvements and feature additions have been made to the other connectors. Amongst other things,&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The names of transaction metadata topics are configurable&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The Debezium UI has been further built out (see &lt;a href=&quot;/blog/2021/11/23/debezium-ui-transforms/&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;/blog/2021/12/02/debezium-ui-topic-groups/&quot;&gt;here&lt;/a&gt; for demos of this)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The Debezium connector for Postgres now &lt;a href=&quot;https://debezium.io/documentation/reference/stable/connectors/postgresql.html#postgresql-message-events&quot;&gt;supports logical decoding messages&lt;/a&gt;, as emitted using the &lt;code&gt;pg_logical_emit_message()&lt;/code&gt; function&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;There&amp;#8217;s a new snapshot mode &lt;code&gt;SCHEMA_ONLY_RECOVERY&lt;/code&gt; for the Debezium connector for Oracle&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The Debezium connector for Oracle supports &lt;a href=&quot;https://debezium.io/documentation/reference/stable/connectors/oracle.html#oracle-truncate-events&quot;&gt;&lt;code&gt;TRUNCATE&lt;/code&gt; events&lt;/a&gt; and the &lt;code&gt;binary.handling.mode&lt;/code&gt; option for controlling how BLOB data is exported&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;There&amp;#8217;s support for &lt;a href=&quot;https://debezium.io/documentation/reference/stable/connectors/oracle.html#oracle-event-buffering-infinispan&quot;&gt;remote Infinispan caches&lt;/a&gt; for buffering large Oracle transactions&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The Debezium connector for MySQL now can export table comments; it also supports heartbeat action queries and schema changes while an incremental snapshot is running; in addition, it received many improvements to its DDL parser and character set handling&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The Debezium connector for Vitess supports transaction metadata events, has an improved &lt;code&gt;source&lt;/code&gt; struct, and supports re-sharding operations in a more flexible way&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Please take a look at the original release announcements (&lt;a href=&quot;/blog/2021/10/27/debezium-1-8-alpha1-released/&quot;&gt;Alpha1&lt;/a&gt;, &lt;a href=&quot;/blog/2021/11/11/debezium-1.8-alpha2-released/&quot;&gt;Alpha2&lt;/a&gt;, &lt;a href=&quot;/blog/2021/11/30/debezium-1.8-beta1-released/&quot;&gt;Beta1&lt;/a&gt;, and &lt;a href=&quot;/blog/2021/12/09/debezium-1.8-cr1-released/&quot;&gt;CR1&lt;/a&gt;) as well as the &lt;a href=&quot;/releases/1.8/release-notes&quot;&gt;1.8 release notes&lt;/a&gt; in order to learn more about these and other new features of this release.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Many thanks to all the folks from the Debezium community which contributed code changes to this release:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/abhishekkh&quot;&gt;Abhishek Hodavdekar&lt;/a&gt;, &lt;a href=&quot;https://github.com/ahus1&quot;&gt;Alexander Schwartz&lt;/a&gt;, &lt;a href=&quot;https://github.com/dlg99&quot;&gt;Andrey Yegorov&lt;/a&gt;, &lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/uidoyen&quot;&gt;Ashique Ansari&lt;/a&gt;, &lt;a href=&quot;https://github.com/bgaraue&quot;&gt;Biel Garau Estarellas&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Bob Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/camilesing&quot;&gt;Camile Sing&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/cburch824&quot;&gt;Christopher Burch&lt;/a&gt;, &lt;a href=&quot;https://github.com/kometen&quot;&gt;Claus Guttesen&lt;/a&gt;, &lt;a href=&quot;https://github.com/danielpetisme&quot;&gt;Daniel PETISME&lt;/a&gt;, &lt;a href=&quot;https://github.com/famartinrh&quot;&gt;Fabian Martinez&lt;/a&gt;, &lt;a href=&quot;https://github.com/gunnarmorling&quot;&gt;Gunnar Morling&lt;/a&gt;, &lt;a href=&quot;https://github.com/gkorland&quot;&gt;Guy Korland&lt;/a&gt;, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/blcksrx&quot;&gt;Hossein Torabi&lt;/a&gt;, &lt;a href=&quot;https://github.com/uidoyen&quot;&gt;Hussain Ansari&lt;/a&gt;, &lt;a href=&quot;https://github.com/sugarcrm-jgminder&quot;&gt;Jacob Gminder&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcechace&quot;&gt;Jakub Cechacek&lt;/a&gt;, &lt;a href=&quot;https://github.com/Jiabao-Sun&quot;&gt;Jiabao Sun&lt;/a&gt;, &lt;a href=&quot;https://github.com/novotnyJiri&quot;&gt;Jiri Novotny&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/josetesan&quot;&gt;Jose Luis&lt;/a&gt;, &lt;a href=&quot;https://github.com/juanfiallo&quot;&gt;Juan Fiallo&lt;/a&gt;, &lt;a href=&quot;https://github.com/judahrand&quot;&gt;Judah Rand&lt;/a&gt;, &lt;a href=&quot;https://github.com/kgalieva&quot;&gt;Katerina Galieva&lt;/a&gt;, &lt;a href=&quot;https://github.com/lairen&quot;&gt;Lairen Hightower&lt;/a&gt;, &lt;a href=&quot;https://github.com/lbroudoux&quot;&gt;Laurent Broudoux&lt;/a&gt;, &lt;a href=&quot;https://github.com/lujiefsi&quot;&gt;陆杰&lt;/a&gt;, &lt;a href=&quot;https://github.com/xenji&quot;&gt;Mario Mueller&lt;/a&gt;, &lt;a href=&quot;https://github.com/mdrillin&quot;&gt;Mark Drilling&lt;/a&gt;, &lt;a href=&quot;https://github.com/mikekamornikov&quot;&gt;Mike Kamornikov&lt;/a&gt;, &lt;a href=&quot;https://github.com/PlugaruT&quot;&gt;Plugaru Tudor&lt;/a&gt;, &lt;a href=&quot;https://github.com/rk3rn3r&quot;&gt;René Kerner&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Robert Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/morozov&quot;&gt;Sergei Morozov&lt;/a&gt;, &lt;a href=&quot;https://github.com/shichao-an&quot;&gt;Shichao An&lt;/a&gt;, &lt;a href=&quot;https://github.com/sgc109&quot;&gt;Sungho Hwang&lt;/a&gt;, &lt;a href=&quot;https://github.com/Thiago-Dantas&quot;&gt;Thiago Dantas&lt;/a&gt;, &lt;a href=&quot;https://github.com/TomBillietKlarrio&quot;&gt;Tom Billiet&lt;/a&gt;, &lt;a href=&quot;https://github.com/unalsurmeli&quot;&gt;Ünal Sürmeli&lt;/a&gt;, &lt;a href=&quot;https://github.com/ramanenka&quot;&gt;Vadzim Ramanenka&lt;/a&gt;, &lt;a href=&quot;https://github.com/vivekwassan&quot;&gt;Vivek Wassan&lt;/a&gt;, &lt;a href=&quot;https://github.com/vjuranek&quot;&gt;Vojtech Juranek&lt;/a&gt;, &lt;a href=&quot;https://github.com/zxpzlp&quot;&gt;Willie Zhu&lt;/a&gt;, &lt;a href=&quot;https://github.com/sonne5&quot;&gt;Yang Wu&lt;/a&gt;, and &lt;a href=&quot;https://github.com/ashulin&quot;&gt;Zongwen Li&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;whats_next&quot;&gt;What&amp;#8217;s Next?&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With another release shipped on schedule, it&amp;#8217;s time for a break and take a rest over the upcoming holidays. We&amp;#8217;ll be back to business in early January, with the planning for the 1.9 release being the first activity.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Please let us know about any requirements and feature requests you may have. One area we&amp;#8217;d like to focus on for the next release is performance benchmarking and subsequentially applying performance improvements based on that. It also looks like there will be new community-led Debezium connector for a distributed NoSQL store; stay tuned for the details around this super-exciting development!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Later in the year, you also can expect the release of Debezium 2.0, where we&amp;#8217;ll focus on cleaning up some inconsistencies and removing some deprecated features such as wal2json support in the Debezium connector for Postgres.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;For now, we wish everybody a happy holiday season, and, if you&amp;#8217;re into it, Merry Christmas! Please note the core team will be on PTO mostly for the coming weeks, so replies to emails, chat messages, issue reports, and pull requests will be slower than usual. Upwards and onwards!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</content><author><name>Gunnar Morling</name></author><category term="releases"/><category term="mongodb"/><category term="mysql"/><category term="postgres"/><category term="sqlserver"/><category term="cassandra"/><category term="oracle"/><category term="db2"/><category term="vitess"/><category term="outbox"/><summary type="html">It&amp;#8217;s my great pleasure to announce the release of Debezium 1.8.0.Final! Besides a strong focus on the Debezium connector for MongoDB (more on that below), the 1.8 release brings support for Postgres' logical decoding messages, support for configuring SMTs and topic creation settings in the Debezium UI, and much more. Overall, the community has fixed 242 issues for this release. A big thank you to everyone who helped to make this release happen on time, sticking to our quarterly release cadence!</summary></entry><entry><title type="html">Note on log4j Security</title><link href="https://debezium.io/blog/2021/12/14/note-on-log4j-security/" rel="alternate" type="text/html" title="Note on log4j Security"/><published>2021-12-14T00:00:00+00:00</published><updated>2021-12-14T00:00:00+00:00</updated><id>https://debezium.io/blog/2021/12/14/note-on-log4j-security</id><content type="html" xml:base="https://debezium.io/blog/2021/12/14/note-on-log4j-security/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;em&gt;TL,DR: Debezium is NOT affected by the recently disclosed remote code execution vulnerability in log4j2 (&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2021-44228&quot;&gt;CVE-2021-44228&lt;/a&gt;); The log4j-1.2.17.jar shipped in Debezium&amp;#8217;s container images contains a class &lt;code&gt;JMSAppender&lt;/code&gt;, which is subject to a MODERATE vulnerability (&lt;a href=&quot;https://access.redhat.com/security/cve/CVE-2021-4104&quot;&gt;CVE-2021-4104&lt;/a&gt;). This appender is NOT used by default, i.e. access to log4j&amp;#8217;s configuration is required in order to exploit this CVE. As a measure of caution, we have decided to remove the &lt;code&gt;JMSAppender&lt;/code&gt; class from Debezium&amp;#8217;s container images as of version 1.7.2.Final, released today.&lt;/em&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;On Dec 10th, a remote code execution vulnerability in the widely used log4j2 library was published (&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2021-44228&quot;&gt;CVE-2021-44228&lt;/a&gt;). Debezium, just like Apache Kafka and Kafka Connect, does not use log4j2 and therefore is NOT affected by this CVE.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Apache Kafka, Kafka Connect and Apache ZooKeeper do use log4j 1.x though, which therefore is shipped as part of &lt;a href=&quot;https://quay.io/organization/debezium&quot;&gt;Debezium&amp;#8217;s container images&lt;/a&gt; for these components. On Dec 13th, a MODERATE vulnerability in log4j 1.x was published (&lt;a href=&quot;https://access.redhat.com/security/cve/CVE-2021-4104&quot;&gt;CVE-2021-4104&lt;/a&gt;), affecting the &lt;code&gt;JMSAppender&lt;/code&gt; class coming with log4j 1.x. This vulnerability &quot;allows a remote attacker to execute code on the server if the deployed application is configured to use &lt;code&gt;JMSAppender&lt;/code&gt; and to the attacker&amp;#8217;s JMS Broker&quot;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This appender is NOT used by default, i.e. &quot;this flaw ONLY affects applications which are specifically configured to use &lt;code&gt;JMSAppender&lt;/code&gt;, which is not the default, or when the attacker has write access to the Log4j configuration for adding &lt;code&gt;JMSAppender&lt;/code&gt; to the attacker&amp;#8217;s JMS Broker&quot;. If you are using &lt;code&gt;JMSAppender&lt;/code&gt;, you should verify and ensure that you are using trustworthy configuration values for its &lt;code&gt;TopicBindingName&lt;/code&gt; and &lt;code&gt;TopicConnectionFactoryBindingName&lt;/code&gt; settings.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Using a JMS-based appender should only very rarely occur in the context of Apache Kafka, if at all. As a measure of caution, we have therefore decided to remove the &lt;code&gt;JMSAppender&lt;/code&gt; class from the &lt;em&gt;log4j-1.2.17.jar&lt;/em&gt; JAR contained in Debezium&amp;#8217;s container images for Apache Kafka, Kafka Connect, and Apache ZooKeeper. At the same time, we are also removing the &lt;code&gt;SocketServer&lt;/code&gt; class from the &lt;em&gt;log4j-1.2.17.jar&lt;/em&gt;, which is subject to another, unrelated CVE (&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2019-17571&quot;&gt;CVE-2019-17571&lt;/a&gt;). This is a separate main class, not used in any way by Debezium, Kafka, Kafka Connect, or ZooKeeper, but we decided to not ship it any longer, thus making the Debezium container images not subject to this CVE either.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Note that if you are running the Debezium connectors via other distributions of Apache Kafka and related components, the &lt;code&gt;JMSAppender&lt;/code&gt; and &lt;code&gt;SocketServer&lt;/code&gt; classes may be present in their &lt;em&gt;log4j-1.2.17.jar&lt;/em&gt;, and you thus should make sure to either not use them at all, or only use them in safe way. Access to log4j&amp;#8217;s configuration should be secured in an appropriate way.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Other distributables of Debezium, such as the individual connector archives, or the Debezium Server distribution, do not contain &lt;em&gt;log4j-1.2.17.jar&lt;/em&gt; and thus are NOT subject to the mentioned CVEs in any way.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The removal of the &lt;code&gt;JMSAppender&lt;/code&gt; and &lt;code&gt;SocketServer&lt;/code&gt; classes from the &lt;em&gt;log4j-1.2.17.jar&lt;/em&gt; shipped with Debezium&amp;#8217;s container images is effective as of Debezium 1.7.2.Final, which was released earlier today. We recommend to update to this version to all users.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;If you have any questions around this topic, please join the discussion on &lt;a href=&quot;https://groups.google.com/g/debezium/c/W3jYvNc-d5M&quot;&gt;this thread&lt;/a&gt; on the Debezium mailling list. If you have any other security-related concerns around Debezium, please do NOT publicly discuss them, but file a Jira issue with limited visibility in our &lt;a href=&quot;https://issues.redhat.com/browse/DBZ&quot;&gt;bug tracker&lt;/a&gt;, and we will follow up with you on this as quickly as possible.&lt;/p&gt; &lt;/div&gt;</content><author><name>Gunnar Morling</name></author><category term="releases"/><summary type="html">TL,DR: Debezium is NOT affected by the recently disclosed remote code execution vulnerability in log4j2 (CVE-2021-44228); The log4j-1.2.17.jar shipped in Debezium&amp;#8217;s container images contains a class JMSAppender, which is subject to a MODERATE vulnerability (CVE-2021-4104). This appender is NOT used by default, i.e. access to log4j&amp;#8217;s configuration is required in order to exploit this CVE. As a measure of caution, we have decided to remove the JMSAppender class from Debezium&amp;#8217;s container images as of version 1.7.2.Final, released today. On Dec 10th, a remote code execution vulnerability in the widely used log4j2 library was published (CVE-2021-44228). Debezium, just like Apache Kafka and Kafka Connect, does not use log4j2 and therefore is NOT affected by this CVE.</summary></entry><entry><title type="html">Debezium 1.8.0.CR1 Released</title><link href="https://debezium.io/blog/2021/12/09/debezium-1.8-cr1-released/" rel="alternate" type="text/html" title="Debezium 1.8.0.CR1 Released"/><published>2021-12-09T00:00:00+00:00</published><updated>2021-12-09T00:00:00+00:00</updated><id>https://debezium.io/blog/2021/12/09/debezium-1.8-cr1-released</id><content type="html" xml:base="https://debezium.io/blog/2021/12/09/debezium-1.8-cr1-released/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;I&amp;#8217;m very excited to announce the release of Debezium &lt;strong&gt;1.8.0.CR1&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As were near the final release due out next week, this release focused heavily on bugfixes. Yet this release includes incremental snapshot support for MongoDB! Overall, not less than &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%201.8.0.CR%20ORDER%20BY%20component%20ASC&quot;&gt;34 issues&lt;/a&gt; have been fixed for this release.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Let&amp;#8217;s take a closer look at some of them.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;mongodb_incremental_snapshots&quot;&gt;MongoDB incremental snapshots&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Incremental snapshotting is a feature that we first introduced as a part of Debezium 1.6 nearly six months ago. The goals of incremental snapshots is to primarily address to very common user pain-points:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;the necessity to execute consistent snapshots before streaming can begin upon connector restart&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;inability to trigger full or partial snapshots after connector has begun streaming&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The implementation of this feature is based on a novel approach to snapshotting originally invented by the &lt;a href=&quot;https://arxiv.org/pdf/2010.12597v1.pdf&quot;&gt;DBLog Framework&lt;/a&gt; from Netflix. Debezium&amp;#8217;s implementation is described in the &lt;a href=&quot;https://github.com/debezium/debezium-design-documents/blob/main/DDD-3.md&quot;&gt;design document&lt;/a&gt;, and we also published an in-depth &lt;a href=&quot;https://debezium.io/blog/2021/10/07/incremental-snapshots/&quot;&gt;blog post&lt;/a&gt; discussing our implementation in greater detail.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With this release, we&amp;#8217;re excited to finally debut this feature for MongoDB. All Debezium core connectors now support this feature; an amazing milestone!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;I&amp;#8217;d like to thank our very own &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt; and &lt;a href=&quot;https://github.com/kgalieva&quot;&gt;Kate Galieva&lt;/a&gt; from Shopify for their amazing efforts these last few months at refining and delivering on this feature as well as the entire community for testing and offering solid feedback.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;further_fixes&quot;&gt;Further fixes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With 1.8 Final release scheduled for next week, a vast majority of the changes in this release focus on stability and bugfixes. Some resolved issues include:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;[Oracle] None of log files contains offset SCN (SCN offset is no longer available in the online redo logs) (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-3635&quot;&gt;DBZ-3635&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Oracle] Add support for truncate in Oracle connector (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4385&quot;&gt;DBZ-4385&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Oracle] Support &lt;code&gt;binary_handling_mode&lt;/code&gt; for Oracle connector (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4400&quot;&gt;DBZ-4400&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Debezium Server] Event Hubs exporter slow/Event data was too large (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4277&quot;&gt;DBZ-4277&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Vitess] Enforce consistent vgtid representation in Vitess connector (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4409&quot;&gt;DBZ-4409&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Vitess] VStream gRPC connection closed after being idle for a few minutes (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4389&quot;&gt;DBZ-4389&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Several fixes to DML and DDL parsing for MySQL (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4397&quot;&gt;DBZ-4397&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4402&quot;&gt;DBZ-4402&lt;/a&gt;) and Oracle (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4388&quot;&gt;DBZ-4388&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-4396&quot;&gt;DBZ-4396&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Please refer to the &lt;a href=&quot;/releases/1.8/release-notes#release-1.8.0-cr1&quot;&gt;release notes&lt;/a&gt; to learn more about these and further fixes in this release.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As always, a big thank you to everyone contributing to this release:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/gunnarmorling&quot;&gt;Gunnar Morling&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcechace&quot;&gt;Jakub Cechacek&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/mdrillin&quot;&gt;Mark Drilling&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Robert Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/shichao-an&quot;&gt;Shichao An&lt;/a&gt;, &lt;a href=&quot;https://github.com/TomBillietKlarrio&quot;&gt;Tom Billiet&lt;/a&gt;, and &lt;a href=&quot;https://github.com/sonne5&quot;&gt;Yang Wu&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;outlook&quot;&gt;Outlook&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As the year is coming to close, we&amp;#8217;re actively preparing some holiday treats!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;You can expect 1.7.2.Final to be released early next week including many bugfixes and improvements. Additionally, we intend to release 1.8.0.Final in the middle of next week barring no unforeseen bug reports with CR1.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;After the holiday break, we plan to be back in full swing on Debezium 1.9. Keep at eye on our &lt;a href=&quot;https://debezium.io/roadmap&quot;&gt;road map&lt;/a&gt; as we&amp;#8217;ll be updating this to include our focus for next quarter&amp;#8217;s release cycle.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We&amp;#8217;re also actively working on the planning and scope of Debezium 2.0 which we intend to release sometime in 2022. We would love your feedback on any features or changes you&amp;#8217;d like to see so join the discussion on this topic on the &lt;a href=&quot;https://groups.google.com/u/1/g/debezium/c/X17AUmQ88-E&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</content><author><name>Chris Cranford</name></author><category term="releases"/><category term="mysql"/><category term="postgres"/><category term="sqlserver"/><category term="cassandra"/><category term="oracle"/><category term="db2"/><category term="vitess"/><category term="outbox"/><summary type="html">I&amp;#8217;m very excited to announce the release of Debezium 1.8.0.CR1! As were near the final release due out next week, this release focused heavily on bugfixes. Yet this release includes incremental snapshot support for MongoDB! Overall, not less than 34 issues have been fixed for this release. Let&amp;#8217;s take a closer look at some of them.</summary></entry><entry><title type="html">Configuring Automatic Topic Creation With the Debezium UI</title><link href="https://debezium.io/blog/2021/12/02/debezium-ui-topic-groups/" rel="alternate" type="text/html" title="Configuring Automatic Topic Creation With the Debezium UI"/><published>2021-12-02T00:00:00+00:00</published><updated>2021-12-02T00:00:00+00:00</updated><id>https://debezium.io/blog/2021/12/02/debezium-ui-topic-groups</id><content type="html" xml:base="https://debezium.io/blog/2021/12/02/debezium-ui-topic-groups/">&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The Debezium UI team continues to add support for more features, allowing users to more easily configure connectors. In this article, we&amp;#8217;ll describe and demonstrate the UI support for topic automatic creation. Read further for more information, including a video demo!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;topic_auto_creation&quot;&gt;Topic Auto-creation&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;When you start a Debezium connector, the topics for the captured events are created by the Kafka broker based on a default, possibly customized, broker configuration (if &lt;code&gt;auto.create.topics.enable = true&lt;/code&gt;). But often when you use Debezium and Kafka in a production environment, you might choose to disable Kafka’s topic auto creation capability (&lt;code&gt;auto.create.topics.enable = false&lt;/code&gt;), or you want the connector topics to be configured differently from the default. In this case you&amp;#8217;ll need to create topics for Debezium’s captured data sources upfront.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Beginning with Kafka 2.6.0, Kafka Connect provides means of customizing the settings of specififc topics created by source connectors such as Debezium (&lt;a href=&quot;https://cwiki.apache.org/confluence/display/KAFKA/KIP-158%3A+Kafka+Connect+should+allow+source+connectors+to+set+topic-specific+settings+for+new+topics&quot;&gt;KIP-158&lt;/a&gt;). If Kafka Connect topic creation is enabled (&lt;code&gt;topic.creation.enable = true&lt;/code&gt;), the Debezium UI now allows you to configure connector topics using the UI.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;kafka_connect_topic_creation&quot;&gt;Kafka Connect Topic Creation&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Kafka Connect topic creation works with groups. There is a &lt;code&gt;default&lt;/code&gt; group, which is used when there is no other group defined that matches the topic.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;You can also define multiple custom topic groups, each with it&amp;#8217;s own configuration. Each group can specify its configuration parameters to customize how the matched topics of the group will be created. The custom groups will fall back to the default group settings for the required &lt;code&gt;replication.factor&lt;/code&gt; and &lt;code&gt;partitions&lt;/code&gt; properties. If the configuration for a custom topic group leaves other properties undefined, the values specified in the default group are not applied.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;To find more detail about topic auto-creation with Debezium, please refer to the &lt;a href=&quot;/documentation/reference/configuration/topic-auto-create-config.html&quot;&gt;reference documentation&lt;/a&gt;. You can also refer to this &lt;a href=&quot;/blog/2020/09/15/debezium-auto-create-topics/&quot;&gt;blog post&lt;/a&gt; for a full example. Watch the following video for a quick demo of topic creation in the Debezium UI:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;responsive-video&quot;&gt; &lt;iframe width=&quot;1600&quot; height=&quot;900&quot; src=&quot;https://www.youtube.com/embed/C7K1V833eDk&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;self_contained_example&quot;&gt;Self-contained Example&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;You can try out topic auto-creation (and more) with our self-contained example &lt;a href=&quot;https://github.com/debezium/debezium-examples/tree/main/ui-demo&quot;&gt;UI demo&lt;/a&gt; - which is included under &lt;a href=&quot;https://github.com/debezium/debezium-examples&quot;&gt;debezium-examples&lt;/a&gt; on GitHub. The UI demo includes a Docker Compose file which brings up several sources with data as well as the UI. Please refer to the &lt;a href=&quot;https://github.com/debezium/debezium-examples/tree/main/ui-demo&quot;&gt;README file&lt;/a&gt; for more details on running the Debezium UI demo.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;To learn more about the Debezium UI, please refer to the &lt;a href=&quot;/documentation/reference/operations/debezium-ui.html&quot;&gt;reference documentation&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;more_coming_soon&quot;&gt;More coming soon!&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Stay tuned for further improvements and new features in the UI in the coming releases. Support for SQL Server and Oracle connectors are coming soon!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;em&gt;A big thank you to the team who have contributed in many ways: Ashique Ansari, Indra Shukla, René Kerner and Gunnar Morling!&lt;/em&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</content><author><name>Mark Drilling</name></author><category term="releases"/><category term="mysql"/><category term="postgres"/><category term="mongo"/><category term="debezium-ui"/><summary type="html">The Debezium UI team continues to add support for more features, allowing users to more easily configure connectors. In this article, we&amp;#8217;ll describe and demonstrate the UI support for topic automatic creation. Read further for more information, including a video demo!</summary></entry></feed>